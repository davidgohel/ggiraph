[{"path":"https://davidgohel.github.io/ggiraph/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Gohel. Author, maintainer. Panagiotis Skintzos. Author. Mike Bostock. Copyright holder.            d3.js Speros Kokenes. Copyright holder.            d3-lasso Eric Shull. Copyright holder.            saveSvgAsPng js library Lee Thomason. Copyright holder.            TinyXML2 Vladimir Agafonkin. Copyright holder.            Flatbush Eric Book. Contributor.            hline vline geoms","code":""},{"path":"https://davidgohel.github.io/ggiraph/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gohel D, Skintzos P (2024). ggiraph: Make 'ggplot2' Graphics Interactive. R package version 0.8.10, https://davidgohel.github.io/ggiraph/.","code":"@Manual{,   title = {ggiraph: Make 'ggplot2' Graphics Interactive},   author = {David Gohel and Panagiotis Skintzos},   year = {2024},   note = {R package version 0.8.10},   url = {https://davidgohel.github.io/ggiraph/}, }"},{"path":"https://davidgohel.github.io/ggiraph/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Make ggplot2 Graphics Interactive","text":"ggiraph tool allows create dynamic ggplot graphs. allows add tooltips, hover effects JavaScript actions graphics. package also allows selection graphical elements used shiny applications. Interactivity added ggplot geometries, legends theme elements, via following aesthetics: tooltip: tooltips displayed mouse elements. onclick: JavaScript function executed elements clicked. data_id: id associated elements (used hover click actions)","code":""},{"path":"https://davidgohel.github.io/ggiraph/index.html","id":"why-use-ggiraph","dir":"","previous_headings":"Overview","what":"Why use {ggiraph}","title":"Make ggplot2 Graphics Interactive","text":"want provide readers information basic information available; can display tooltip user’s mouse graphical element, can also visually animate elements attribute mouse passes graphical element, finally can link JavaScript action click, opening hypertext link. want allow users Shiny application select graphical elements; example, can make points scatter plot selectable available reactive value server part application. Shiny, ggiraph allows interaction graph elements, legends elements, titles ggplot theme elements server part; selection available reactive value.  hood, ggiraph htmlwidget ggplot2 extension. allows graphics interactive, exporting SVG documents using special attributes various elements.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/index.html","id":"with-r-and-r-markdown","dir":"","previous_headings":"Usage","what":"With R and R Markdown","title":"Make ggplot2 Graphics Interactive","text":"things need know create interactive graphic : Instead using geom_point, use geom_point_interactive, instead using geom_sf, use geom_sf_interactive… Provide least one aesthetics tooltip, data_id onclick create interactive elements. Call function girafe ggplot object graphic translated web interactive graphics.","code":"library(ggplot2) library(ggiraph) data <- mtcars data$carname <- row.names(data)  gg_point = ggplot(data = data) +     geom_point_interactive(aes(x = wt, y = qsec, color = disp,     tooltip = carname, data_id = carname)) +    theme_minimal()  girafe(ggobj = gg_point)"},{"path":"https://davidgohel.github.io/ggiraph/index.html","id":"with-shiny","dir":"","previous_headings":"Usage","what":"With Shiny","title":"Make ggplot2 Graphics Interactive","text":"used within shiny application, elements associated id (data_id) can selected manipulated client server sides. list selected values stored reactive value named [shiny_id]_selected.","code":""},{"path":"https://davidgohel.github.io/ggiraph/index.html","id":"available-interactive-layers","dir":"","previous_headings":"Usage","what":"Available interactive layers","title":"Make ggplot2 Graphics Interactive","text":"several available interactive geometries, scales ggplot elements. Almost ggplot2 elements can made interactive ggiraph. based ggplot version, goes scales guides: geom_point_interactive(), geom_col_interactive(), geom_tile_interactive(), scale_fill_manual_interactive(), scale_discrete_manual_interactive(), guide_legend_interactive(), … can also make interactive annotations, titles facets (see help(interactive_parameters)).","code":""},{"path":"https://davidgohel.github.io/ggiraph/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Make ggplot2 Graphics Interactive","text":"Get development version github Get CRAN version","code":"devtools::install_github('davidgohel/ggiraph') install.packages(\"ggiraph\")"},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/index.html","id":"online-documentation","dir":"","previous_headings":"Resources","what":"Online documentation","title":"Make ggplot2 Graphics Interactive","text":"help pages located https://davidgohel.github.io/ggiraph/.","code":""},{"path":"https://davidgohel.github.io/ggiraph/index.html","id":"getting-help","dir":"","previous_headings":"Resources","what":"Getting help","title":"Make ggplot2 Graphics Interactive","text":"questions use package, visit Stackoverflow use tags ggiraph r Stackoverflow link! usually read answer possible.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/index.html","id":"bug-reports","dir":"","previous_headings":"Contributing to the package","what":"Bug reports","title":"Make ggplot2 Graphics Interactive","text":"file bug report, please spend time making easy follow reproduce. time spend making bug report coherent, time can dedicate investigate bug opposed bug report.","code":""},{"path":"https://davidgohel.github.io/ggiraph/index.html","id":"contributing-to-the-package-development","dir":"","previous_headings":"Contributing to the package","what":"Contributing to the package development","title":"Make ggplot2 Graphics Interactive","text":"great way start contribute example improve documentation. want submit Pull Request integrate functions , provide possible: new function(s) code roxygen tags (examples) new section appropriate vignette describes use new function corresponding tests directory inst/tinytest. using rhub (run rhub::check_for_cran()), see everything ok. submitted, PR evaluated automatically Github Action able see something broke.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/annotate_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive annotations — annotate_interactive","title":"Create interactive annotations — annotate_interactive","text":"layer based annotate(). See documentation function details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/annotate_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive annotations — annotate_interactive","text":"","code":"annotate_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/annotate_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive annotations — annotate_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/annotate_interactive.html","id":"details-for-annotate-interactive-functions","dir":"Reference","previous_headings":"","what":"Details for annotate_*_interactive functions","title":"Create interactive annotations — annotate_interactive","text":"interactive parameters can supplied arguments relevant function can scalar values vectors depending params base function.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/annotate_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive annotations — annotate_interactive","text":"","code":"# add interactive annotation to a ggplot ------- library(ggplot2) library(ggiraph)  gg <- ggplot(mtcars, aes(x = disp, y = qsec )) +   geom_point(size=2) +   annotate_interactive(     \"rect\", xmin = 100, xmax = 400, fill = \"red\",     data_id = \"an_id\", tooltip = \"a tooltip\",     ymin = 18, ymax = 20, alpha = .5)  x <- girafe(ggobj = gg, width_svg = 5, height_svg = 4) if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/annotation_raster_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive raster annotations — annotation_raster_interactive","title":"Create interactive raster annotations — annotation_raster_interactive","text":"layer based annotation_raster(). See documentation function details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/annotation_raster_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive raster annotations — annotation_raster_interactive","text":"","code":"annotation_raster_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/annotation_raster_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive raster annotations — annotation_raster_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/annotation_raster_interactive.html","id":"details-for-annotate-interactive-functions","dir":"Reference","previous_headings":"","what":"Details for annotate_*_interactive functions","title":"Create interactive raster annotations — annotation_raster_interactive","text":"interactive parameters can supplied arguments relevant function can scalar values vectors depending params base function.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/annotation_raster_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive raster annotations — annotation_raster_interactive","text":"","code":"# add interactive raster annotation to a ggplot ------- library(ggplot2) library(ggiraph)  # Generate data rainbow <- matrix(hcl(seq(0, 360, length.out = 50 * 50), 80, 70), nrow = 50) p <- ggplot(mtcars, aes(mpg, wt)) +   geom_point() +   annotation_raster_interactive(rainbow, 15, 20, 3, 4, tooltip = \"I am an image!\") x <- girafe(ggobj = p) if( interactive() ) print(x)  # To fill up whole plot p <- ggplot(mtcars, aes(mpg, wt)) +   annotation_raster_interactive(rainbow, -Inf, Inf, -Inf, Inf, tooltip = \"I am an image too!\") +   geom_point() x <- girafe(ggobj = p) if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/dsvg.html","id":null,"dir":"Reference","previous_headings":"","what":"SVG Graphics Driver — dsvg","title":"SVG Graphics Driver — dsvg","text":"function produces SVG files (compliant current w3 svg XML standard) elements can made interactive. order generate output, used fonts must available computer used create svg, used fonts must also available computer used render svg.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/dsvg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SVG Graphics Driver — dsvg","text":"","code":"dsvg(   file = \"Rplots.svg\",   width = 6,   height = 6,   bg = \"white\",   pointsize = 12,   standalone = TRUE,   setdims = TRUE,   canvas_id = \"svg_1\",   title = NULL,   desc = NULL,   fonts = list() )"},{"path":"https://davidgohel.github.io/ggiraph/reference/dsvg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SVG Graphics Driver — dsvg","text":"file file output appear. height, width Height width inches. bg Default background color plot (defaults \"white\"). pointsize default point size. standalone Produce stand alone svg file? FALSE, omits xml header default namespace. setdims TRUE (default), svg node attributes width & height set. canvas_id svg id within HTML page. title label accessibility purposes (aria-label/aria-labelledby). aware using , browser use tooltip whole svg may class interactive elements' tooltip. desc longer description accessibility purposes (aria-description/aria-describedby). fonts Named list font names aliased fonts installed system. unspecified, R default families \"sans\", \"serif\", \"mono\" \"symbol\" aliased family returned match_family(). fonts available, default mapping use values: example, using fonts = list(sans = \"Roboto\") make default font \"Roboto\" many ggplot theme using theme_minimal(base_family=\"\") theme_minimal(base_family=\"sans\"). can also use theme_minimal(base_family=\"Roboto\").","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/dsvg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SVG Graphics Driver — dsvg","text":"","code":"fileout <- tempfile(fileext = \".svg\") dsvg(file = fileout) plot(rnorm(10), main=\"Simple Example\", xlab = \"\", ylab = \"\") dev.off() #> agg_png  #>       2"},{"path":"https://davidgohel.github.io/ggiraph/reference/dsvg_view.html","id":null,"dir":"Reference","previous_headings":"","what":"Run plotting code and view svg in RStudio Viewer or web broswer. — dsvg_view","title":"Run plotting code and view svg in RStudio Viewer or web broswer. — dsvg_view","text":"useful primarily testing. Requires htmltools package.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/dsvg_view.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run plotting code and view svg in RStudio Viewer or web broswer. — dsvg_view","text":"","code":"dsvg_view(code, ...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/dsvg_view.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run plotting code and view svg in RStudio Viewer or web broswer. — dsvg_view","text":"code Plotting code execute. ... arguments passed dsvg().","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/dsvg_view.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run plotting code and view svg in RStudio Viewer or web broswer. — dsvg_view","text":"","code":"# \\donttest{ dsvg_view(plot(1:10)) dsvg_view(hist(rnorm(100))) # }"},{"path":"https://davidgohel.github.io/ggiraph/reference/element_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive theme elements — element_interactive","title":"Create interactive theme elements — element_interactive","text":"functions user can add interactivity various theme elements. based element_rect(), element_line() element_text() See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/element_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive theme elements — element_interactive","text":"","code":"element_line_interactive(...)  element_rect_interactive(...)  element_text_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/element_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive theme elements — element_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/element_interactive.html","id":"details-for-element-interactive-functions","dir":"Reference","previous_headings":"","what":"Details for element_*_interactive functions","title":"Create interactive theme elements — element_interactive","text":"interactive parameters can supplied arguments relevant function scalar values. theme text elements (element_text_interactive()), interactive parameters can also supplied setting label value, via labs() family functions setting scale/guide title key label. Instead setting character value element, function label_interactive() can used define interactive parameters go along label. parameters supplied way, override default values set theme via element_text_interactive() via guide's theme parameters.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/element_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive theme elements — element_interactive","text":"","code":"# add interactive theme elements ------- library(ggplot2) library(ggiraph)  dataset <- structure(list(qsec = c(16.46, 17.02, 18.61, 19.44, 17.02, 20.22 ), disp = c(160, 160, 108, 258, 360, 225), carname = c(\"Mazda RX4\", \"Mazda RX4 Wag\", \"Datsun 710\", \"Hornet 4 Drive\", \"Hornet Sportabout\", \"Valiant\"), wt = c(2.62, 2.875, 2.32, 3.215, 3.44, 3.46)), row.names = c(\"Mazda RX4\", \"Mazda RX4 Wag\", \"Datsun 710\", \"Hornet 4 Drive\", \"Hornet Sportabout\", \"Valiant\"), class = \"data.frame\")  # plots gg_point = ggplot(data = dataset) +   geom_point_interactive(aes(     x = wt,     y = qsec,     color = disp,     tooltip = carname,     data_id = carname   )) +   theme_minimal() +   theme(     plot.title = element_text_interactive(       data_id = \"plot.title\",       tooltip = \"plot title\",       hover_css = \"fill:red;stroke:none;font-size:12pt\"     ),     plot.subtitle = element_text_interactive(       data_id = \"plot.subtitle\",       tooltip = \"plot subtitle\",       hover_css = \"fill:none;\"     ),     axis.title.x = element_text_interactive(       data_id = \"axis.title.x\",       tooltip = \"Description for x axis\",       hover_css = \"fill:red;stroke:none;\"     ),     axis.title.y = element_text_interactive(       data_id = \"axis.title.y\",       tooltip = \"Description for y axis\",       hover_css = \"fill:red;stroke:none;\"     ),     panel.grid.major = element_line_interactive(       data_id = \"panel.grid\",       tooltip = \"Major grid lines\",       hover_css = \"fill:none;stroke:red;\"     )   ) +   labs(     title = \"Interactive points example!\",     subtitle = label_interactive(       \"by ggiraph\",       tooltip = \"Click me!\",       onclick = \"window.open(\\\"https://davidgohel.github.io/ggiraph/\\\")\",       hover_css = \"fill:magenta;cursor:pointer;\"     )   )  x <- girafe(ggobj = gg_point) if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/facet_grid_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive grid facets — facet_grid_interactive","title":"Create interactive grid facets — facet_grid_interactive","text":"facets based facet_grid(). make facet interactive, mandatory use labeller_interactive() argument labeller.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/facet_grid_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive grid facets — facet_grid_interactive","text":"","code":"facet_grid_interactive(..., interactive_on = \"text\")"},{"path":"https://davidgohel.github.io/ggiraph/reference/facet_grid_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive grid facets — facet_grid_interactive","text":"... arguments passed base function labeller_interactive() argument labeller. interactive_on one 'text' (strip text made interactive), 'rect' (strip rectangles made interactive) '' (strip text rectangles made interactive).","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/facet_grid_interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive grid facets — facet_grid_interactive","text":"interactive facetting object.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/facet_wrap_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive wraped facets — facet_wrap_interactive","title":"Create interactive wraped facets — facet_wrap_interactive","text":"facets based facet_wrap(). make facet interactive, mandatory use labeller_interactive() argument labeller.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/facet_wrap_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive wraped facets — facet_wrap_interactive","text":"","code":"facet_wrap_interactive(..., interactive_on = \"text\")"},{"path":"https://davidgohel.github.io/ggiraph/reference/facet_wrap_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive wraped facets — facet_wrap_interactive","text":"... arguments passed base function labeller_interactive() argument labeller. interactive_on one 'text' (strip text made interactive), 'rect' (strip rectangles made interactive) '' (strip text rectangles made interactive).","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/facet_wrap_interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive wraped facets — facet_wrap_interactive","text":"interactive facetting object.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/font_family_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if font family exists. — font_family_exists","title":"Check if font family exists. — font_family_exists","text":"Check font family exists system fonts.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/font_family_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if font family exists. — font_family_exists","text":"","code":"font_family_exists(font_family = \"sans\")"},{"path":"https://davidgohel.github.io/ggiraph/reference/font_family_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if font family exists. — font_family_exists","text":"font_family font family name (case sensitive)","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/font_family_exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if font family exists. — font_family_exists","text":"logical value","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/font_family_exists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if font family exists. — font_family_exists","text":"","code":"font_family_exists(\"sans\") #> [1] FALSE font_family_exists(\"Arial\") #> [1] FALSE font_family_exists(\"Courier\") #> [1] FALSE"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_abline_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive reference lines — geom_abline_interactive","title":"Create interactive reference lines — geom_abline_interactive","text":"geometries based geom_abline(), geom_hline() geom_vline().","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_abline_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive reference lines — geom_abline_interactive","text":"","code":"geom_abline_interactive(...)  geom_hline_interactive(...)  geom_vline_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_abline_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive reference lines — geom_abline_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_abline_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive reference lines — geom_abline_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_abline_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive reference lines — geom_abline_interactive","text":"","code":"# add diagonal interactive reference lines to a ggplot ------- library(ggplot2) library(ggiraph)  p <- ggplot(mtcars, aes(wt, mpg)) + geom_point() g <- p + geom_abline_interactive(intercept = 20, tooltip = 20) x <- girafe(ggobj = g) if (interactive())   print(x)  l <- coef(lm(mpg ~ wt, data = mtcars)) g <- p + geom_abline_interactive(   intercept = l[[1]],   slope = l[[2]],   tooltip = paste(\"intercept:\", l[[1]], \"\\nslope:\", l[[2]]),   data_id=\"abline\" ) x <- girafe(ggobj = g) x <- girafe_options(x = x,                     opts_hover(css = \"cursor:pointer;fill:orange;stroke:orange;\")) if (interactive())   print(x)  # add horizontal interactive reference lines to a ggplot ------- library(ggplot2) library(ggiraph)  if( requireNamespace(\"dplyr\", quietly = TRUE)){   g1 <- ggplot(economics, aes(x = date, y = unemploy)) +     geom_point() + geom_line()    gg_hline1 <- g1 + geom_hline_interactive(     aes(yintercept = mean(unemploy),         tooltip = round(mean(unemploy), 2)), size = 3)   x <- girafe(ggobj = gg_hline1)   if( interactive() ) print(x) }  dataset <- data.frame(   x = c(1, 2, 5, 6, 8),   y = c(3, 6, 2, 8, 7),   vx = c(1, 1.5, 0.8, 0.5, 1.3),   vy = c(0.2, 1.3, 1.7, 0.8, 1.4),   year = c(2014, 2015, 2016, 2017, 2018) )  dataset$clickjs <- rep(paste0(\"alert(\\\"\", mean(dataset$y), \"\\\")\"), 5)   g2 <- ggplot(dataset, aes(x = year, y = y)) +   geom_point() + geom_line()  gg_hline2 <- g2 + geom_hline_interactive(   aes(yintercept = mean(y),       tooltip = round(mean(y), 2),       data_id = y, onclick = clickjs))  x <- girafe(ggobj = gg_hline2) if( interactive() ) print(x)  # add vertical interactive reference lines to a ggplot ------- library(ggplot2) library(ggiraph)  if (requireNamespace(\"dplyr\", quietly = TRUE)) {   g1 <- ggplot(diamonds, aes(carat)) +     geom_histogram()    gg_vline1 <- g1 + geom_vline_interactive(     aes(xintercept = mean(carat),         tooltip = round(mean(carat), 2),         data_id = carat), size = 3)   x <- girafe(ggobj = gg_vline1)   if( interactive() ) print(x) } #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  dataset <- data.frame(x = rnorm(100))  dataset$clickjs <- rep(paste0(\"alert(\\\"\",                               round(mean(dataset$x), 2), \"\\\")\"), 100)  g2 <- ggplot(dataset, aes(x)) +   geom_density(fill = \"#000000\", alpha = 0.7) gg_vline2 <- g2 + geom_vline_interactive(   aes(xintercept = mean(x), tooltip = round(mean(x), 2),       data_id = x, onclick = clickjs), color = \"white\")  x <- girafe(ggobj = gg_vline2) x <- girafe_options(x = x,                     opts_hover(css = \"cursor:pointer;fill:orange;stroke:orange;\") ) if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_bar_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive bars — geom_bar_interactive","title":"Create interactive bars — geom_bar_interactive","text":"geometries based geom_bar() geom_col(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_bar_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive bars — geom_bar_interactive","text":"","code":"geom_bar_interactive(...)  geom_col_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_bar_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive bars — geom_bar_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_bar_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive bars — geom_bar_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_bar_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive bars — geom_bar_interactive","text":"","code":"# add interactive bar ------- library(ggplot2) library(ggiraph)  p <- ggplot(mpg, aes( x = class, tooltip = class,         data_id = class ) ) +   geom_bar_interactive()  x <- girafe(ggobj = p) if( interactive() ) print(x)  dat <- data.frame( name = c( \"David\", \"Constance\", \"Leonie\" ),     gender = c( \"Male\", \"Female\", \"Female\" ),     height = c(172, 159, 71 ) ) p <- ggplot(dat, aes( x = name, y = height, tooltip = gender,                       data_id = name ) ) +   geom_col_interactive()  x <- girafe(ggobj = p) if( interactive() ) print(x)  # an example with interactive guide ---- dat <- data.frame(   name = c( \"Guy\", \"Ginette\", \"David\", \"Cedric\", \"Frederic\" ),   gender = c( \"Male\", \"Female\", \"Male\", \"Male\", \"Male\" ),   height = c(169, 160, 171, 172, 171 ) ) p <- ggplot(dat, aes( x = name, y = height, fill = gender,                       data_id = name ) ) +   geom_bar_interactive(stat = \"identity\") +     scale_fill_manual_interactive(       values = c(Male = \"#0072B2\", Female = \"#009E73\"),       data_id = c(Female = \"Female\", Male = \"Male\"),       tooltip = c(Male = \"Male\", Female = \"Female\")     ) x <- girafe(ggobj = p) if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_bin_2d_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive heatmaps of 2d bin counts — geom_bin_2d_interactive","title":"Create interactive heatmaps of 2d bin counts — geom_bin_2d_interactive","text":"geometry based geom_bin_2d(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_bin_2d_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive heatmaps of 2d bin counts — geom_bin_2d_interactive","text":"","code":"geom_bin_2d_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_bin_2d_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive heatmaps of 2d bin counts — geom_bin_2d_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_bin_2d_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive heatmaps of 2d bin counts — geom_bin_2d_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_bin_2d_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive heatmaps of 2d bin counts — geom_bin_2d_interactive","text":"","code":"# add interactive bin2d heatmap to a ggplot ------- library(ggplot2) library(ggiraph)  p <- ggplot(diamonds, aes(x, y, fill=cut)) + xlim(4, 10) + ylim(4, 10)+   geom_bin2d_interactive(aes(tooltip = cut), bins = 30)  x <- girafe(ggobj = p) #> Warning: Removed 478 rows containing non-finite outside the scale range #> (`stat_bin2d()`). #> Warning: Removed 17 rows containing missing values or values outside the scale range #> (`geom_interactive_tile()`). if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_boxplot_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive boxplot — geom_boxplot_interactive","title":"Create interactive boxplot — geom_boxplot_interactive","text":"geometry based geom_boxplot(). See documentation function details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_boxplot_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive boxplot — geom_boxplot_interactive","text":"","code":"geom_boxplot_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_boxplot_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive boxplot — geom_boxplot_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_boxplot_interactive.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create interactive boxplot — geom_boxplot_interactive","text":"can supply interactive parameters outlier points prefixing outlier. prefix. example: aes(outlier.tooltip = 'bla', outlier.data_id = 'blabla'). IMPORTANT: supplying outlier interactive parameters, correct group aesthetic must also supplied. Otherwise default group calculation incorrect, result incorrect plot.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_boxplot_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive boxplot — geom_boxplot_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_boxplot_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive boxplot — geom_boxplot_interactive","text":"","code":"# add interactive boxplot ------- library(ggplot2) library(ggiraph)  p <- ggplot(mpg, aes(x = class, y = hwy, tooltip = class)) +   geom_boxplot_interactive()  x <- girafe(ggobj = p) if (interactive()) print(x)  p <- ggplot(mpg) +   geom_boxplot_interactive(     aes(       x = drv, y = hwy,       fill = class,       data_id = class,       tooltip = after_stat({         paste0(           \"class: \", .data$fill,           \"\\nQ1: \", prettyNum(.data$ymin),           \"\\nQ3: \", prettyNum(.data$ymax),           \"\\nmedian: \", prettyNum(.data$middle)         )       })     ),     outlier.colour = \"red\"   ) +   guides(fill = \"none\") +   theme_minimal()  x <- girafe(ggobj = p) if (interactive()) print(x)   p <- ggplot(mpg) +   geom_boxplot_interactive(     aes(       x = drv, y = hwy,       fill = class, group = paste(drv, class),       data_id = class,       tooltip = after_stat({         paste0(           \"class: \", .data$fill,           \"\\nQ1: \", prettyNum(.data$ymin),           \"\\nQ3: \", prettyNum(.data$ymax),           \"\\nmedian: \", prettyNum(.data$middle)         )       }),       outlier.tooltip = paste(         \"I am an outlier!\\nhwy:\", hwy, \"\\ndrv:\", drv, \"\\nclass:\", class       )     ),     outlier.colour = \"red\"   ) +   guides(fill = \"none\") +   theme_minimal()  x <- girafe(ggobj = p) if (interactive()) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_contour_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive 2d contours of a 3d surface — geom_contour_interactive","title":"Create interactive 2d contours of a 3d surface — geom_contour_interactive","text":"geometries based geom_contour() geom_contour_filled(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_contour_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive 2d contours of a 3d surface — geom_contour_interactive","text":"","code":"geom_contour_interactive(...)  geom_contour_filled_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_contour_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive 2d contours of a 3d surface — geom_contour_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_contour_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive 2d contours of a 3d surface — geom_contour_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_contour_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive 2d contours of a 3d surface — geom_contour_interactive","text":"","code":"# add interactive contours to a ggplot ------- library(ggplot2) library(ggiraph)  v <- ggplot(faithfuld, aes(waiting, eruptions, z = density)) p <- v + geom_contour_interactive(aes(   colour = after_stat(level),   tooltip = paste(\"Level:\", after_stat(level)) )) x <- girafe(ggobj = p) if (interactive()) print(x)  if (packageVersion(\"grid\") >= numeric_version(\"3.6\")) {   p <- v + geom_contour_filled_interactive(aes(     colour = after_stat(level),     fill = after_stat(level),     tooltip = paste(\"Level:\", after_stat(level))   ))   x <- girafe(ggobj = p)   if (interactive()) print(x) }"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_count_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive point counts — geom_count_interactive","title":"Create interactive point counts — geom_count_interactive","text":"geometry based geom_bin2d(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_count_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive point counts — geom_count_interactive","text":"","code":"geom_count_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_count_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive point counts — geom_count_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_count_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive point counts — geom_count_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_count_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive point counts — geom_count_interactive","text":"","code":"# add interactive point counts to a ggplot ------- library(ggplot2) library(ggiraph)  p <- ggplot(mpg, aes(cty, hwy)) +   geom_count_interactive(aes(tooltip=after_stat(n))) x <- girafe(ggobj = p) if( interactive() ) print(x)  p2 <- ggplot(diamonds, aes(x = cut, y = clarity)) +   geom_count_interactive(aes(size = after_stat(prop),                              tooltip = after_stat(round(prop, 3)), group = 1)) +   scale_size_area(max_size = 10) x <- girafe(ggobj = p2) if (interactive()) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_crossbar_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive vertical intervals: lines, crossbars & errorbars — geom_crossbar_interactive","title":"Create interactive vertical intervals: lines, crossbars & errorbars — geom_crossbar_interactive","text":"geometries based geom_crossbar(), geom_errorbar(), geom_linerange() geom_pointrange(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_crossbar_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive vertical intervals: lines, crossbars & errorbars — geom_crossbar_interactive","text":"","code":"geom_crossbar_interactive(...)  geom_errorbar_interactive(...)  geom_linerange_interactive(...)  geom_pointrange_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_crossbar_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive vertical intervals: lines, crossbars & errorbars — geom_crossbar_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_crossbar_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive vertical intervals: lines, crossbars & errorbars — geom_crossbar_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_crossbar_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive vertical intervals: lines, crossbars & errorbars — geom_crossbar_interactive","text":"","code":"# add interactive intervals ------- library(ggplot2) library(ggiraph)  # Create a simple example dataset df <- data.frame(   trt = factor(c(1, 1, 2, 2)),   resp = c(1, 5, 3, 4),   group = factor(c(1, 2, 1, 2)),   upper = c(1.1, 5.3, 3.3, 4.2),   lower = c(0.8, 4.6, 2.4, 3.6) )  p <- ggplot(df, aes(trt, resp, colour = group)) g <- p + geom_linerange_interactive(aes(ymin = lower, ymax = upper, tooltip = group)) x <- girafe(ggobj = g) if( interactive() ) print(x)  g <- p + geom_pointrange_interactive(aes(ymin = lower, ymax = upper, tooltip = group)) x <- girafe(ggobj = g) if( interactive() ) print(x)  g <- p + geom_crossbar_interactive(aes(ymin = lower, ymax = upper, tooltip = group), width = 0.2) x <- girafe(ggobj = g) if( interactive() ) print(x)  g <- p + geom_errorbar_interactive(aes(ymin = lower, ymax = upper, tooltip = group), width = 0.2) x <- girafe(ggobj = g) if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_density_2d_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive contours of a 2d density estimate — geom_density_2d_interactive","title":"Create interactive contours of a 2d density estimate — geom_density_2d_interactive","text":"geometries based geom_density_2d() geom_density_2d_filled(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_density_2d_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive contours of a 2d density estimate — geom_density_2d_interactive","text":"","code":"geom_density_2d_interactive(...)  geom_density_2d_filled_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_density_2d_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive contours of a 2d density estimate — geom_density_2d_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_density_2d_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive contours of a 2d density estimate — geom_density_2d_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_density_2d_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive contours of a 2d density estimate — geom_density_2d_interactive","text":"","code":"# add interactive contours to a ggplot ------- library(ggplot2) library(ggiraph)  m <- ggplot(faithful, aes(x = eruptions, y = waiting)) +   geom_point_interactive(aes(tooltip = paste(\"Waiting:\", waiting, \"\\neruptions:\", eruptions))) +   xlim(0.5, 6) +   ylim(40, 110) p <- m + geom_density_2d_interactive(aes(tooltip = paste(\"Level:\", after_stat(level)))) x <- girafe(ggobj = p) if (interactive()) print(x)  set.seed(4393) dsmall <- diamonds[sample(nrow(diamonds), 1000), ] d <- ggplot(dsmall, aes(x, y))   p <- d + geom_density_2d_interactive(aes(colour = cut, tooltip = cut, data_id = cut)) x <- girafe(ggobj = p) x <- girafe_options(x = x,                     opts_hover(css = \"stroke:red;stroke-width:3px;\") ) if (interactive()) print(x)  p <- d + geom_density_2d_filled_interactive(aes(colour = cut, tooltip = cut, data_id = cut),                                             contour_var = \"count\") + facet_wrap(vars(cut)) x <- girafe(ggobj = p) x <- girafe_options(x = x,                     opts_hover(css = \"stroke:red;stroke-width:3px;\") ) if (interactive()) print(x)   p <- d + stat_density_2d(aes(fill = after_stat(nlevel),                              tooltip = paste(\"nlevel:\", after_stat(nlevel))),                          geom = \"interactive_polygon\") +   facet_grid(. ~ cut) + scale_fill_viridis_c_interactive(tooltip = \"nlevel\") x <- girafe(ggobj = p) if (interactive()) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_density_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive smoothed density estimates — geom_density_interactive","title":"Create interactive smoothed density estimates — geom_density_interactive","text":"geometry based geom_density(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_density_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive smoothed density estimates — geom_density_interactive","text":"","code":"geom_density_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_density_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive smoothed density estimates — geom_density_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_density_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive smoothed density estimates — geom_density_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_density_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive smoothed density estimates — geom_density_interactive","text":"","code":"# add interactive bar ------- library(ggplot2) library(ggiraph)  p <- ggplot(diamonds, aes(carat)) +   geom_density_interactive(tooltip=\"density\", data_id=\"density\") x <- girafe(ggobj = p) x <- girafe_options(x = x,                     opts_hover(css = \"stroke:orange;stroke-width:3px;\") ) if( interactive() ) print(x)  p <- ggplot(diamonds, aes(depth, fill = cut, colour = cut)) +   geom_density_interactive(aes(tooltip=cut, data_id=cut), alpha = 0.1) +   xlim(55, 70) x <- girafe(ggobj = p) #> Warning: Removed 45 rows containing non-finite outside the scale range #> (`stat_density()`). x <- girafe_options(x = x,                     opts_hover(css = \"stroke:yellow;stroke-width:3px;fill-opacity:0.8;\") ) if( interactive() ) print(x)   p <- ggplot(diamonds, aes(carat, fill = cut)) +   geom_density_interactive(aes(tooltip=cut, data_id=cut), position = \"stack\") x <- girafe(ggobj = p) if( interactive() ) print(x)  p <- ggplot(diamonds, aes(carat, after_stat(count), fill = cut)) +   geom_density_interactive(aes(tooltip=cut, data_id=cut), position = \"fill\") x <- girafe(ggobj = p) if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_dotplot_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive dot plots — geom_dotplot_interactive","title":"Create interactive dot plots — geom_dotplot_interactive","text":"geometry based geom_dotplot(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_dotplot_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive dot plots — geom_dotplot_interactive","text":"","code":"geom_dotplot_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_dotplot_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive dot plots — geom_dotplot_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_dotplot_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive dot plots — geom_dotplot_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_dotplot_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive dot plots — geom_dotplot_interactive","text":"","code":"# add interactive dot plots to a ggplot ------- library(ggplot2) library(ggiraph)  p <- ggplot(mtcars, aes(x = mpg, fill = factor(cyl))) +   geom_dotplot_interactive(     aes(tooltip = row.names(mtcars)),     stackgroups = TRUE, binwidth = 1, method = \"histodot\"   )  x <- girafe(ggobj = p) if( interactive() ) print(x)  gg_point = ggplot(   data = mtcars,   mapping = aes(     x = factor(vs), fill = factor(cyl), y = mpg,     tooltip = row.names(mtcars))) +   geom_dotplot_interactive(binaxis = \"y\",     stackdir = \"center\", position = \"dodge\")  x <- girafe(ggobj = gg_point) #> Bin width defaults to 1/30 of the range of the data. Pick better value with #> `binwidth`. if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_errorbarh_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive horizontal error bars — geom_errorbarh_interactive","title":"Create interactive horizontal error bars — geom_errorbarh_interactive","text":"geometry based geom_errorbarh(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_errorbarh_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive horizontal error bars — geom_errorbarh_interactive","text":"","code":"geom_errorbarh_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_errorbarh_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive horizontal error bars — geom_errorbarh_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_errorbarh_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive horizontal error bars — geom_errorbarh_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_errorbarh_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive horizontal error bars — geom_errorbarh_interactive","text":"","code":"# add horizontal error bars ------- library(ggplot2) library(ggiraph)  df <- data.frame(   trt = factor(c(1, 1, 2, 2)),   resp = c(1, 5, 3, 4),   group = factor(c(1, 2, 1, 2)),   se = c(0.1, 0.3, 0.3, 0.2) )  # Define the top and bottom of the errorbars  p <- ggplot(df, aes(resp, trt, colour = group)) g <- p + geom_point() +   geom_errorbarh_interactive(aes(xmax = resp + se, xmin = resp - se, tooltip = group)) x <- girafe(ggobj = g) if( interactive() ) print(x)  g <- p + geom_point() +   geom_errorbarh_interactive(aes(xmax = resp + se, xmin = resp - se, height = .2, tooltip = group)) x <- girafe(ggobj = g) if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_hex_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive hexagonal heatmaps — geom_hex_interactive","title":"Create interactive hexagonal heatmaps — geom_hex_interactive","text":"geometry based geom_hex(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_hex_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive hexagonal heatmaps — geom_hex_interactive","text":"","code":"geom_hex_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_hex_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive hexagonal heatmaps — geom_hex_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_hex_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive hexagonal heatmaps — geom_hex_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_hex_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive hexagonal heatmaps — geom_hex_interactive","text":"","code":"# add interactive hexagonal heatmaps to a ggplot ------- library(ggplot2) library(ggiraph)  p <- ggplot(diamonds, aes(carat, price)) +   geom_hex_interactive(aes(tooltip = after_stat(count)), bins = 10) x <- girafe(ggobj = p) if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_histogram_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive histograms and frequency polygons — geom_freqpoly_interactive","title":"Create interactive histograms and frequency polygons — geom_freqpoly_interactive","text":"geometries based geom_histogram() geom_freqpoly(). See documentation functions details. interactive version providing single tooltip per group data (data_id). means possible associate single tooltip set bins.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_histogram_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive histograms and frequency polygons — geom_freqpoly_interactive","text":"","code":"geom_freqpoly_interactive(...)  geom_histogram_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_histogram_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive histograms and frequency polygons — geom_freqpoly_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_histogram_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive histograms and frequency polygons — geom_freqpoly_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_histogram_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive histograms and frequency polygons — geom_freqpoly_interactive","text":"","code":"# add interactive histogram ------- library(ggplot2) library(ggiraph)  p <- ggplot(diamonds, aes(carat)) +   geom_histogram_interactive(bins=30, aes(tooltip = after_stat(count),                                           group = 1L) ) x <- girafe(ggobj = p) if( interactive() ) print(x)  p <- ggplot(diamonds, aes(price, colour = cut, tooltip = cut, data_id = cut)) +   geom_freqpoly_interactive(binwidth = 500) x <- girafe(ggobj = p) x <- girafe_options(x = x,                     opts_hover(css = \"stroke-width:3px;\") ) if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_jitter_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive jittered points — geom_jitter_interactive","title":"Create interactive jittered points — geom_jitter_interactive","text":"geometry based geom_jitter(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_jitter_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive jittered points — geom_jitter_interactive","text":"","code":"geom_jitter_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_jitter_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive jittered points — geom_jitter_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_jitter_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive jittered points — geom_jitter_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_jitter_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive jittered points — geom_jitter_interactive","text":"","code":"# add interactive paths to a ggplot ------- library(ggplot2) library(ggiraph)  gg_jitter <- ggplot(mpg, aes(cyl, hwy,                      tooltip = paste(manufacturer, model, year, trans, sep = \"\\n\")))+   geom_jitter_interactive()  x <- girafe(ggobj = gg_jitter) if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_map_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive polygons from a reference map — geom_map_interactive","title":"Create interactive polygons from a reference map — geom_map_interactive","text":"geometry based geom_map(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_map_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive polygons from a reference map — geom_map_interactive","text":"","code":"geom_map_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_map_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive polygons from a reference map — geom_map_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_map_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive polygons from a reference map — geom_map_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_map_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive polygons from a reference map — geom_map_interactive","text":"","code":"# add interactive maps to a ggplot ------- library(ggplot2) library(ggiraph)  crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)  # create tooltips and onclick events states_ <- sprintf(\"<p>%s<\/p>\",                    as.character(crimes$state) ) table_ <- paste0(   \"<table><tr><td>UrbanPop<\/td>\",   sprintf(\"<td>%.0f<\/td>\", crimes$UrbanPop),   \"<\/tr><tr>\",   \"<td>Assault<\/td>\",   sprintf(\"<td>%.0f<\/td>\", crimes$Assault),   \"<\/tr><\/table>\" )  onclick <- sprintf(   \"window.open(\\\"%s%s\\\")\",   \"http://en.wikipedia.org/wiki/\",   as.character(crimes$state) )   crimes$labs <- paste0(states_, table_) crimes$onclick = onclick  if (require(\"maps\") ) {   states_map <- map_data(\"state\")   gg_map <- ggplot(crimes, aes(map_id = state))   gg_map <- gg_map + geom_map_interactive(aes(                   fill = Murder,                   tooltip = labs,                   data_id = state,                   onclick = onclick                 ),                 map = states_map) +     expand_limits(x = states_map$long, y = states_map$lat)   x <- girafe(ggobj = gg_map)   if( interactive() ) print(x) } #> Loading required package: maps"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_path_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive observations connections — geom_path_interactive","title":"Create interactive observations connections — geom_path_interactive","text":"geometries based geom_path(), geom_line() geom_step(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_path_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive observations connections — geom_path_interactive","text":"","code":"geom_path_interactive(...)  geom_line_interactive(...)  geom_step_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_path_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive observations connections — geom_path_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_path_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive observations connections — geom_path_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_path_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive observations connections — geom_path_interactive","text":"","code":"# add interactive paths to a ggplot ------- library(ggplot2) library(ggiraph)  # geom_line_interactive example ----- if( requireNamespace(\"dplyr\", quietly = TRUE)){   gg <- ggplot(economics_long,     aes(date, value01, colour = variable, tooltip = variable, data_id = variable,         hover_css = \"fill:none;\")) +     geom_line_interactive(size = .75)   x <- girafe(ggobj = gg)   x <- girafe_options(x = x,                       opts_hover(css = \"stroke:red;fill:orange\") )   if( interactive() ) print(x)  }  # geom_step_interactive example ----- if( requireNamespace(\"dplyr\", quietly = TRUE)){   recent <- economics[economics$date > as.Date(\"2013-01-01\"), ]   gg = ggplot(recent, aes(date, unemploy)) +     geom_step_interactive(aes(tooltip = \"Unemployement stairstep line\", data_id = 1))   x <- girafe(ggobj = gg)   x <- girafe_options(x = x,                       opts_hover(css = \"stroke:red;\") )   if( interactive() ) print(x) }  # create datasets ----- id = paste0(\"id\", 1:10) data = expand.grid(list(   variable = c(\"2000\", \"2005\", \"2010\", \"2015\"),   id = id   ) ) groups = sample(LETTERS[1:3], size = length(id), replace = TRUE) data$group = groups[match(data$id, id)] data$value = runif(n = nrow(data)) data$tooltip = paste0('line ', data$id ) data$onclick = paste0(\"alert(\\\"\", data$id, \"\\\")\" )  cols = c(\"orange\", \"orange1\", \"orange2\", \"navajowhite4\", \"navy\") dataset2 <- data.frame(x = rep(1:20, 5),     y = rnorm(100, 5, .2) + rep(1:5, each=20),     z = rep(1:20, 5),     grp = factor(rep(1:5, each=20)),     color = factor(rep(1:5, each=20)),     label = rep(paste0( \"id \", 1:5 ), each=20),     onclick = paste0(       \"alert(\\\"\",       sample(letters, 100, replace = TRUE),       \"\\\")\" ) )   # plots --- gg_path_1 = ggplot(data, aes(variable, value, group = id,     colour = group, tooltip = tooltip, onclick = onclick, data_id = id)) +   geom_path_interactive(alpha = 0.5)  gg_path_2 = ggplot(data, aes(variable, value, group = id, data_id = id,     tooltip = tooltip)) +   geom_path_interactive(alpha = 0.5) +   facet_wrap( ~ group )  gg_path_3 = ggplot(dataset2) +   geom_path_interactive(aes(x, y, group=grp, data_id = label,     color = color, tooltip = label, onclick = onclick), size = 1 )  # ggiraph widgets --- x <- girafe(ggobj = gg_path_1) x <- girafe_options(x = x,                     opts_hover(css = \"stroke-width:3px;\") ) if( interactive() ) print(x)  x <- girafe(ggobj = gg_path_2) x <- girafe_options(x = x,                     opts_hover(css = \"stroke:orange;stroke-width:3px;\") ) if( interactive() ) print(x)  x <- girafe(ggobj = gg_path_3) x <- girafe_options(x = x,                     opts_hover(css = \"stroke-width:10px;\") ) if( interactive() ) print(x)  m <- ggplot(economics, aes(unemploy/pop, psavert)) p <- m + geom_path_interactive(aes(colour = as.numeric(date), tooltip=date)) x <- girafe(ggobj = p) if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_point_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive points — geom_point_interactive","title":"Create interactive points — geom_point_interactive","text":"geometry based geom_point(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_point_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive points — geom_point_interactive","text":"","code":"geom_point_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_point_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive points — geom_point_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_point_interactive.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create interactive points — geom_point_interactive","text":"following shapes id 3, 4 7 14 composite symbols used.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_point_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive points — geom_point_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_point_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive points — geom_point_interactive","text":"","code":"# add interactive points to a ggplot ------- library(ggplot2) library(ggiraph)  dataset <- structure(list(qsec = c(16.46, 17.02, 18.61, 19.44, 17.02, 20.22 ), disp = c(160, 160, 108, 258, 360, 225), carname = c(\"Mazda RX4\", \"Mazda RX4 Wag\", \"Datsun 710\", \"Hornet 4 Drive\", \"Hornet Sportabout\", \"Valiant\"), wt = c(2.62, 2.875, 2.32, 3.215, 3.44, 3.46)), row.names = c(\"Mazda RX4\", \"Mazda RX4 Wag\", \"Datsun 710\", \"Hornet 4 Drive\", \"Hornet Sportabout\", \"Valiant\"), class = \"data.frame\") dataset #>                    qsec disp           carname    wt #> Mazda RX4         16.46  160         Mazda RX4 2.620 #> Mazda RX4 Wag     17.02  160     Mazda RX4 Wag 2.875 #> Datsun 710        18.61  108        Datsun 710 2.320 #> Hornet 4 Drive    19.44  258    Hornet 4 Drive 3.215 #> Hornet Sportabout 17.02  360 Hornet Sportabout 3.440 #> Valiant           20.22  225           Valiant 3.460  # plots gg_point = ggplot(data = dataset) +   geom_point_interactive(aes(x = wt, y = qsec, color = disp,     tooltip = carname, data_id = carname)) + theme_minimal()  x <- girafe(ggobj = gg_point) if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_polygon_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive polygons — geom_polygon_interactive","title":"Create interactive polygons — geom_polygon_interactive","text":"geometry based geom_polygon(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_polygon_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive polygons — geom_polygon_interactive","text":"","code":"geom_polygon_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_polygon_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive polygons — geom_polygon_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_polygon_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive polygons — geom_polygon_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_polygon_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive polygons — geom_polygon_interactive","text":"","code":"# add interactive polygons to a ggplot ------- library(ggplot2) library(ggiraph)  # create data ids <- factor(c(\"1.1\", \"2.1\", \"1.2\", \"2.2\", \"1.3\", \"2.3\"))  values <- data.frame(   id = ids,   value = c(3, 3.1, 3.1, 3.2, 3.15, 3.5) ) positions <- data.frame(   id = rep(ids, each = 4),   x = c(2, 1, 1.1, 2.2, 1, 0, 0.3, 1.1, 2.2, 1.1, 1.2, 2.5, 1.1, 0.3,     0.5, 1.2, 2.5, 1.2, 1.3, 2.7, 1.2, 0.5, 0.6, 1.3),   y = c(-0.5, 0, 1, 0.5, 0, 0.5, 1.5, 1, 0.5, 1, 2.1, 1.7, 1, 1.5,     2.2, 2.1, 1.7, 2.1, 3.2, 2.8, 2.1, 2.2, 3.3, 3.2) )  datapoly <- merge(values, positions, by=c(\"id\"))  datapoly$oc = \"alert(this.getAttribute(\\\"data-id\\\"))\"  # create a ggplot ----- gg_poly_1 <- ggplot(datapoly, aes( x = x, y = y ) ) +   geom_polygon_interactive(aes(fill = value, group = id,     tooltip = value, data_id = value, onclick = oc))  # display ------ x <- girafe(ggobj = gg_poly_1) if( interactive() ) print(x)  if (packageVersion(\"grid\") >= \"3.6\") {   # As of R version 3.6 geom_polygon() supports polygons with holes   # Use the subgroup aesthetic to differentiate holes from the main polygon    holes <- do.call(rbind, lapply(split(datapoly, datapoly$id), function(df) {     df$x <- df$x + 0.5 * (mean(df$x) - df$x)     df$y <- df$y + 0.5 * (mean(df$y) - df$y)     df   }))   datapoly$subid <- 1L   holes$subid <- 2L   datapoly <- rbind(datapoly, holes)   p <- ggplot(datapoly, aes(x = x, y = y)) +     geom_polygon_interactive(aes(fill = value, group = id, subgroup = subid,                                  tooltip = value, data_id = value, onclick = oc))   x <- girafe(ggobj = p)   if( interactive() ) print(x) }"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_quantile_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive quantile regression — geom_quantile_interactive","title":"Create interactive quantile regression — geom_quantile_interactive","text":"geometry based geom_quantile(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_quantile_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive quantile regression — geom_quantile_interactive","text":"","code":"geom_quantile_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_quantile_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive quantile regression — geom_quantile_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_quantile_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive quantile regression — geom_quantile_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_quantile_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive quantile regression — geom_quantile_interactive","text":"","code":"# add interactive quantiles to a ggplot ------- library(ggplot2) library(ggiraph)  if (requireNamespace(\"quantreg\", quietly = TRUE)) {   m <- ggplot(mpg, aes(displ, 1 / hwy)) + geom_point()   p <- m + geom_quantile_interactive(     aes(       tooltip = after_stat(quantile),       data_id = after_stat(quantile),       colour = after_stat(quantile)     ),     formula = y ~ x,     size = 2,     alpha = 0.5   )   x <- girafe(ggobj = p)   x <- girafe_options(x = x,                       opts_hover(css = \"stroke:red;stroke-width:10px;\") )   if (interactive()) print(x) }"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_raster_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive raster rectangles — geom_raster_interactive","title":"Create interactive raster rectangles — geom_raster_interactive","text":"geometry based geom_raster(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_raster_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive raster rectangles — geom_raster_interactive","text":"","code":"geom_raster_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_raster_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive raster rectangles — geom_raster_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_raster_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive raster rectangles — geom_raster_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_raster_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive raster rectangles — geom_raster_interactive","text":"","code":"# add interactive raster to a ggplot ------- library(ggplot2) library(ggiraph)  df <- expand.grid(x = 0:5, y = 0:5) df$z <- runif(nrow(df))  gg <- ggplot(df, aes(x, y, fill = z, tooltip = \"tooltip\")) +   geom_raster_interactive() +   scale_fill_gradient_interactive(     data_id = \"coco\", onclick = \"cici\", tooltip = \"cucu\"   )  x <- girafe(ggobj = gg) if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_rect_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive rectangles — geom_rect_interactive","title":"Create interactive rectangles — geom_rect_interactive","text":"geometries based geom_rect() geom_tile(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_rect_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive rectangles — geom_rect_interactive","text":"","code":"geom_rect_interactive(...)  geom_tile_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_rect_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive rectangles — geom_rect_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_rect_interactive.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create interactive rectangles — geom_rect_interactive","text":"Converting raster svg elements inflate dramatically size svg make unreadable browser. Function geom_tile_interactive used caution, total number rectangles small.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_rect_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive rectangles — geom_rect_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_rect_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive rectangles — geom_rect_interactive","text":"","code":"# add interactive polygons to a ggplot ------- library(ggplot2) library(ggiraph)  dataset = data.frame( x1 = c(1, 3, 1, 5, 4),   x2 = c(2, 4, 3, 6, 6),   y1 = c( 1, 1, 4, 1, 3),   y2 = c( 2, 2, 5, 3, 5),   t = c( 'a', 'a', 'a', 'b', 'b'),   r = c( 1, 2, 3, 4, 5),   tooltip = c(\"ID 1\", \"ID 2\", \"ID 3\", \"ID 4\", \"ID 5\"),   uid = c(\"ID 1\", \"ID 2\", \"ID 3\", \"ID 4\", \"ID 5\"),   oc = rep(\"alert(this.getAttribute(\\\"data-id\\\"))\", 5) )  gg_rect = ggplot() +   scale_x_continuous(name=\"x\") +   scale_y_continuous(name=\"y\") +   geom_rect_interactive(data=dataset,     mapping = aes(xmin = x1, xmax = x2,       ymin = y1, ymax = y2, fill = t,       tooltip = tooltip, onclick = oc, data_id = uid ),     color=\"black\", alpha=0.5, linejoin = \"bevel\", lineend = \"round\") +   geom_text(data=dataset,       aes(x = x1 + ( x2 - x1 ) / 2, y = y1 + ( y2 - y1 ) / 2,           label = r ),     size = 4 )  x <- girafe(ggobj = gg_rect) if( interactive() ) print(x) # add interactive tiles to a ggplot ------- library(ggplot2) library(ggiraph)  df <- data.frame(   id = rep(c(\"a\", \"b\", \"c\", \"d\", \"e\"), 2),   x = rep(c(2, 5, 7, 9, 12), 2),   y = rep(c(1, 2), each = 5),   z = factor(rep(1:5, each = 2)),   w = rep(diff(c(0, 4, 6, 8, 10, 14)), 2) )  p <- ggplot(df, aes(x, y, tooltip = id)) + geom_tile_interactive(aes(fill = z)) x <- girafe(ggobj = p) if( interactive() ) print(x)   # correlation dataset ---- cor_mat <- cor(mtcars) diag( cor_mat ) <- NA var1 <- rep( row.names(cor_mat), ncol(cor_mat) ) var2 <- rep( colnames(cor_mat), each = nrow(cor_mat) ) cor <- as.numeric(cor_mat) cor_mat <- data.frame( var1 = var1, var2 = var2,   cor = cor, stringsAsFactors = FALSE ) cor_mat[[\"tooltip\"]] <-   sprintf(\"<i>`%s`<\/i> vs <i>`%s`<\/i>:<\/br><code>%.03f<\/code>\",   var1, var2, cor)  p <- ggplot(data = cor_mat, aes(x = var1, y = var2) ) +   geom_tile_interactive(aes(fill = cor, tooltip = tooltip), colour = \"white\") +   scale_fill_gradient2_interactive(low = \"#BC120A\", mid = \"white\", high = \"#BC120A\",                                    limits = c(-1, 1), data_id = \"cormat\", tooltip = \"cormat\") +   coord_equal() x <- girafe(ggobj = p) if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_ribbon_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive ribbons and area plots — geom_ribbon_interactive","title":"Create interactive ribbons and area plots — geom_ribbon_interactive","text":"geometries based geom_ribbon() geom_area(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_ribbon_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive ribbons and area plots — geom_ribbon_interactive","text":"","code":"geom_ribbon_interactive(...)  geom_area_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_ribbon_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive ribbons and area plots — geom_ribbon_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_ribbon_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive ribbons and area plots — geom_ribbon_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_ribbon_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive ribbons and area plots — geom_ribbon_interactive","text":"","code":"# add interactive bar ------- library(ggplot2) library(ggiraph)  # Generate data huron <- data.frame(year = 1875:1972, level = as.vector(LakeHuron)) h <- ggplot(huron, aes(year))  g <- h +   geom_ribbon_interactive(aes(ymin = level - 1, ymax = level + 1),                           fill = \"grey70\", tooltip = \"ribbon1\", data_id=\"ribbon1\",                           outline.type = \"both\",                           hover_css = \"stroke:red;stroke-width:inherit;\") +   geom_line_interactive(aes(y = level), tooltip = \"level\", data_id=\"line1\",                         hover_css = \"stroke:orange;fill:none;\") x <- girafe(ggobj = g) x <- girafe_options(x = x,                     opts_hover(css = girafe_css(                       css = \"stroke:orange;stroke-width:3px;\",                       area = \"fill:blue;\"                     ))) if( interactive() ) print(x)   g <- h + geom_area_interactive(aes(y = level), tooltip = \"area1\") x <- girafe(ggobj = g) if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_segment_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive line segments and curves — geom_curve_interactive","title":"Create interactive line segments and curves — geom_curve_interactive","text":"geometries based geom_segment() geom_curve(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_segment_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive line segments and curves — geom_curve_interactive","text":"","code":"geom_curve_interactive(...)  geom_segment_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_segment_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive line segments and curves — geom_curve_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_segment_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive line segments and curves — geom_curve_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_segment_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive line segments and curves — geom_curve_interactive","text":"","code":"# add interactive segments and curves to a ggplot ------- library(ggplot2) library(ggiraph)  counts <- as.data.frame(table(x = rpois(100,5))) counts$x <- as.numeric( as.character(counts$x) ) counts$xlab <- paste0(\"bar\",as.character(counts$x) )  gg_segment_1 <- ggplot(data = counts, aes(x = x, y = Freq,       yend = 0, xend = x, tooltip = xlab ) ) +   geom_segment_interactive( size = I(10)) x <- girafe(ggobj = gg_segment_1) if( interactive() ) print(x)  dataset = data.frame(x=c(1,2,5,6,8),     y=c(3,6,2,8,7),     vx=c(1,1.5,0.8,0.5,1.3),     vy=c(0.2,1.3,1.7,0.8,1.4),     labs = paste0(\"Lab\", 1:5)) dataset$clickjs = paste0(\"alert(\\\"\",dataset$labs, \"\\\")\" )  gg_segment_2 = ggplot() +   geom_segment_interactive(data=dataset, mapping=aes(x=x, y=y,       xend=x+vx, yend=y+vy, tooltip = labs, onclick=clickjs ),     arrow=grid::arrow(length = grid::unit(0.03, \"npc\")),     size=2, color=\"blue\") +   geom_point(data=dataset, mapping=aes(x=x, y=y),     size=4, shape=21, fill=\"white\")  x <- girafe(ggobj = gg_segment_2) if( interactive() ) print(x)  df <- data.frame(x1 = 2.62, x2 = 3.57, y1 = 21.0, y2 = 15.0) p <- ggplot(df, aes(x = x1, y = y1, xend = x2, yend = y2)) +   geom_curve_interactive(aes(colour = \"curve\", tooltip=I(\"curve\"))) +   geom_segment_interactive(aes(colour = \"segment\", tooltip=I(\"segment\")))  x <- girafe(ggobj = p) if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_sf_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive sf objects — geom_sf_interactive","title":"Create interactive sf objects — geom_sf_interactive","text":"geometries based geom_sf(), geom_sf_label() geom_sf_text(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_sf_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive sf objects — geom_sf_interactive","text":"","code":"geom_sf_interactive(...)  geom_sf_label_interactive(...)  geom_sf_text_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_sf_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive sf objects — geom_sf_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_sf_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive sf objects — geom_sf_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_sf_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive sf objects — geom_sf_interactive","text":"","code":"# add interactive sf objects to a ggplot ------- library(ggplot2) library(ggiraph)  ## original code: see section examples of ggplot2::geom_sf help file if (requireNamespace(\"sf\",                      quietly = TRUE,                      versionCheck = c(op = \">=\", version = \"0.7-3\"))) {   nc <- sf::st_read(system.file(\"shape/nc.shp\", package = \"sf\"), quiet = TRUE)   gg <- ggplot(nc) +     geom_sf_interactive(aes(fill = AREA, tooltip = NAME, data_id = NAME))   x <- girafe(ggobj = gg)   if( interactive() ) print(x)    nc_3857 <- sf::st_transform(nc, \"+init=epsg:3857\")    # Unfortunately if you plot other types of feature you'll need to use   # show.legend to tell ggplot2 what type of legend to use   nc_3857$mid <- sf::st_centroid(nc_3857$geometry)   gg <- ggplot(nc_3857) +     geom_sf(colour = \"white\") +     geom_sf_interactive(aes(geometry = mid,         size = AREA, tooltip = NAME, data_id = NAME),       show.legend = \"point\")   x <- girafe( ggobj = gg)   if( interactive() ) print(x)    # Example with texts.   gg <- ggplot(nc_3857[1:3, ]) +     geom_sf(aes(fill = AREA)) +     geom_sf_text_interactive(aes(label = NAME, tooltip = NAME), color=\"white\")   x <- girafe( ggobj = gg)   if( interactive() ) print(x)    # Example with labels.   gg <- ggplot(nc_3857[1:3, ]) +     geom_sf(aes(fill = AREA)) +     geom_sf_label_interactive(aes(label = NAME, tooltip = NAME))   x <- girafe( ggobj = gg)   if( interactive() ) print(x) } #> Warning: GDAL Message 1: +init=epsg:XXXX syntax is deprecated. It might return a CRS with a non-EPSG compliant axis order."},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_smooth_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive smoothed conditional means — geom_smooth_interactive","title":"Create interactive smoothed conditional means — geom_smooth_interactive","text":"geometry based geom_smooth(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_smooth_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive smoothed conditional means — geom_smooth_interactive","text":"","code":"geom_smooth_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_smooth_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive smoothed conditional means — geom_smooth_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_smooth_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive smoothed conditional means — geom_smooth_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_smooth_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive smoothed conditional means — geom_smooth_interactive","text":"","code":"# add interactive bar ------- library(ggplot2) library(ggiraph)  p <- ggplot(mpg, aes(displ, hwy)) +   geom_point() +   geom_smooth_interactive(aes(tooltip=\"smoothed line\", data_id=\"smooth\")) x <- girafe(ggobj = p) #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x' x <- girafe_options(x = x,                     opts_hover(css = \"stroke:orange;stroke-width:3px;\") ) if( interactive() ) print(x)  p <- ggplot(mpg, aes(displ, hwy)) +   geom_point() +   geom_smooth_interactive(method = lm, se = FALSE, tooltip=\"smooth\", data_id=\"smooth\") x <- girafe(ggobj = p) #> `geom_smooth()` using formula = 'y ~ x' if( interactive() ) print(x)  p <- ggplot(mpg, aes(displ, hwy, colour = class, tooltip = class, data_id = class)) +   geom_point_interactive() +   geom_smooth_interactive(se = FALSE, method = lm) x <- girafe(ggobj = p) #> `geom_smooth()` using formula = 'y ~ x' x <- girafe_options(x = x,                     opts_hover(css = \"stroke:red;stroke-width:3px;\") ) if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_spoke_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive line segments parameterised by location, direction and distance — geom_spoke_interactive","title":"Create interactive line segments parameterised by location, direction and distance — geom_spoke_interactive","text":"geometry based geom_spoke(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_spoke_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive line segments parameterised by location, direction and distance — geom_spoke_interactive","text":"","code":"geom_spoke_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_spoke_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive line segments parameterised by location, direction and distance — geom_spoke_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_spoke_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive line segments parameterised by location, direction and distance — geom_spoke_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_spoke_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive line segments parameterised by location, direction and distance — geom_spoke_interactive","text":"","code":"# add interactive line segments parameterised by location, # direction and distance to a ggplot ------- library(ggplot2) library(ggiraph)  df <- expand.grid(x = 1:10, y=1:10) df$angle <- runif(100, 0, 2*pi) df$speed <- runif(100, 0, sqrt(0.1 * df$x))  p <- ggplot(df, aes(x, y)) +   geom_point() +   geom_spoke_interactive(aes(angle = angle, tooltip=round(angle, 2)), radius = 0.5) x <- girafe(ggobj = p) if( interactive() ) print(x)  p2 <- ggplot(df, aes(x, y)) +   geom_point() +   geom_spoke_interactive(aes(angle = angle, radius = speed,                              tooltip=paste(round(angle, 2), round(speed, 2), sep=\"\\n\"))) x2 <- girafe(ggobj = p2) if( interactive() ) print(x2)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_text_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive textual annotations — geom_label_interactive","title":"Create interactive textual annotations — geom_label_interactive","text":"geometries based geom_text() geom_label(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_text_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive textual annotations — geom_label_interactive","text":"","code":"geom_label_interactive(...)  geom_text_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_text_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive textual annotations — geom_label_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_text_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive textual annotations — geom_label_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_text_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive textual annotations — geom_label_interactive","text":"","code":"# add interactive labels to a ggplot ------- library(ggplot2) library(ggiraph)   p <- ggplot(mtcars, aes(wt, mpg, label = rownames(mtcars))) +   geom_label_interactive(aes(tooltip = paste(rownames(mtcars), mpg, sep = \"\\n\"))) x <- girafe(ggobj = p) if( interactive() ) print(x)   p <- ggplot(mtcars, aes(wt, mpg, label = rownames(mtcars))) +   geom_label_interactive(aes(fill = factor(cyl),                              tooltip = paste(rownames(mtcars), mpg, sep = \"\\n\")),                          colour = \"white\",                          fontface = \"bold\") x <- girafe(ggobj = p) if( interactive() ) print(x)  # add interactive texts to a ggplot ------- library(ggplot2) library(ggiraph)  ## the data dataset = mtcars dataset$label = row.names(mtcars)  dataset$tooltip = paste0( \"cyl: \", dataset$cyl, \"<br/>\",        \"gear: \", dataset$gear, \"<br/>\",        \"carb: \", dataset$carb)  ## the plot gg_text = ggplot(dataset,                  aes(x = mpg, y = wt, label = label,                      color = qsec,                      tooltip = tooltip, data_id = label)) +   geom_text_interactive(check_overlap = TRUE) +   coord_cartesian(xlim = c(0,50))  ## display the plot x <- girafe(ggobj = gg_text) x <- girafe_options(x = x,                     opts_hover(css = \"fill:#FF4C3B;font-style:italic;\") ) if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_text_repel_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive repulsive textual annotations — geom_text_repel_interactive","title":"Create interactive repulsive textual annotations — geom_text_repel_interactive","text":"geometries based ggrepel::geom_text_repel() ggrepel::geom_label_repel(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_text_repel_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive repulsive textual annotations — geom_text_repel_interactive","text":"","code":"geom_text_repel_interactive(...)  geom_label_repel_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_text_repel_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive repulsive textual annotations — geom_text_repel_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_text_repel_interactive.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create interactive repulsive textual annotations — geom_text_repel_interactive","text":"ggrepel package required geometries","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_text_repel_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive repulsive textual annotations — geom_text_repel_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_text_repel_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive repulsive textual annotations — geom_text_repel_interactive","text":"","code":"# add interactive repulsive texts to a ggplot ------- library(ggplot2) library(ggiraph)  # geom_text_repel_interactive if (requireNamespace(\"ggrepel\", quietly = TRUE)) {   dataset = mtcars   dataset$label = row.names(mtcars)   dataset$tooltip = paste0(dataset$label, \"<br/>\", \"cyl: \", dataset$cyl, \"<br/>\",                            \"gear: \", dataset$gear, \"<br/>\",                            \"carb: \", dataset$carb)   p <- ggplot(dataset, aes(wt, mpg, color = qsec ) ) +     geom_point_interactive(aes(tooltip = tooltip, data_id = label))    gg_text = p +     geom_text_repel_interactive(       aes(label = label, tooltip = tooltip, data_id = label),       size = 3     )    x <- girafe(ggobj = gg_text)   x <- girafe_options(x = x,                       opts_hover(css = \"fill:#FF4C3B;\") )   if (interactive()) print(x) }  # geom_label_repel_interactive if (requireNamespace(\"ggrepel\", quietly = TRUE)) {   gg_label = p +     geom_label_repel_interactive(       aes(label = label, tooltip = tooltip, data_id = label),       size = 3,       max.overlaps = 12     )    x2 <- girafe(ggobj = gg_label)   x2 <- girafe_options(x = x2,                       opts_hover(css = ggiraph::girafe_css(                        css = \";\",                        area = \"fill:#FF4C3B;\"                       )) )   if (interactive()) print(x2) }"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_violin_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive violin plot — geom_violin_interactive","title":"Create interactive violin plot — geom_violin_interactive","text":"geometry based geom_violin(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_violin_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive violin plot — geom_violin_interactive","text":"","code":"geom_violin_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_violin_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive violin plot — geom_violin_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_violin_interactive.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Create interactive violin plot — geom_violin_interactive","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/geom_violin_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive violin plot — geom_violin_interactive","text":"","code":"# add interactive violin plot ------- library(ggplot2) library(ggiraph)  p <- ggplot(mtcars, aes(factor(cyl), mpg)) +   geom_violin_interactive(aes(fill = cyl, tooltip = cyl)) x <- girafe(ggobj = p) if( interactive() ) print(x)  # Show quartiles p2 <- ggplot(mtcars, aes(factor(cyl), mpg)) +   geom_violin_interactive(aes(tooltip=after_stat(density)),                           draw_quantiles = c(0.25, 0.5, 0.75)) x2 <- girafe(ggobj = p2) if( interactive() ) print(x2)"},{"path":"https://davidgohel.github.io/ggiraph/reference/ggiraph-ggproto.html","id":null,"dir":"Reference","previous_headings":"","what":"ggproto classes for ggiraph — GeomInteractive","title":"ggproto classes for ggiraph — GeomInteractive","text":"ggproto classes ggiraph","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/ggiraph-ggproto.html","id":"geoms","dir":"Reference","previous_headings":"","what":"Geoms","title":"ggproto classes for ggiraph — GeomInteractive","text":"geom_*_interactive functions (like geom_point_interactive) return layer contains GeomInteractive* object (like GeomInteractivePoint). Geom* object responsible rendering data plot. See Geom information.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/ggiraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggiraph object (deprecated) — ggiraph","title":"Create a ggiraph object (deprecated) — ggiraph","text":"Create interactive graphic used web browser. function now deprecated, users now use function girafe().","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/ggiraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggiraph object (deprecated) — ggiraph","text":"","code":"ggiraph(   code,   ggobj = NULL,   pointsize = 12,   width = 0.75,   width_svg = 6,   height_svg = 5,   tooltip_extra_css = NULL,   hover_css = NULL,   tooltip_opacity = 0.9,   tooltip_offx = 10,   tooltip_offy = 0,   tooltip_zindex = 999,   zoom_max = 1,   selection_type = \"multiple\",   selected_css = NULL,   ... )"},{"path":"https://davidgohel.github.io/ggiraph/reference/ggiraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggiraph object (deprecated) — ggiraph","text":"code Plotting code execute ggobj ggplot object print. Argument code ignored argument supplied. pointsize default pointsize plotted text pixels, default 12. width widget width ratio (0 < width <= 1). width_svg, height_svg width height graphics region inches. default values 6 5 inches. define aspect ratio graphic used define viewbox attribute SVG result. use girafe() 'R Markdown' document, recommend using arguments knitr options fig.width fig.height used instead. tooltip_extra_css extra css (added position: absolute;pointer-events: none;) used customize tooltip area. hover_css css apply mouse hover element data-id attribute. tooltip_opacity tooltip opacity tooltip_offx tooltip x offset tooltip_offy tooltip y offset tooltip_zindex tooltip css z-index, default 999. zoom_max maximum zoom factor selection_type row selection mode (\"single\", \"multiple\", \"none\") widget Shiny application. selected_css css apply element selected (shiny ). ... arguments passed dsvg()","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/ggiraphOutput.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggiraph output element — ggiraphOutput","title":"Create a ggiraph output element — ggiraphOutput","text":"Render ggiraph within application page. function now deprecated, users now use function girafeOutput().","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/ggiraphOutput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggiraph output element — ggiraphOutput","text":"","code":"ggiraphOutput(outputId, width = \"100%\", height = \"500px\")"},{"path":"https://davidgohel.github.io/ggiraph/reference/ggiraphOutput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggiraph output element — ggiraphOutput","text":"outputId output variable read ggiraph . width widget width height widget height","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/ggiraphOutput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a ggiraph output element — ggiraphOutput","text":"","code":"if (FALSE) { if( require(shiny) && interactive() ){   app_dir <- file.path( system.file(package = \"ggiraph\"), \"examples/shiny/cars\" )   shinyAppDir(appDir = app_dir )  } if( require(shiny) && interactive() ){   app_dir <- file.path( system.file(package = \"ggiraph\"), \"examples/shiny/crimes\" )   shinyAppDir(appDir = app_dir ) } }"},{"path":"https://davidgohel.github.io/ggiraph/reference/girafe.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a girafe object — girafe","title":"Create a girafe object — girafe","text":"Create interactive graphic ggplot object used web browser. function replace function ggiraph.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/girafe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a girafe object — girafe","text":"","code":"girafe(   code,   ggobj = NULL,   pointsize = 12,   width_svg = NULL,   height_svg = NULL,   options = list(),   dependencies = NULL,   ... )"},{"path":"https://davidgohel.github.io/ggiraph/reference/girafe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a girafe object — girafe","text":"code Plotting code execute ggobj ggplot object print. Argument code ignored argument supplied. pointsize default pointsize plotted text pixels, default 12. width_svg, height_svg width height graphics region inches. default values 6 5 inches. define aspect ratio graphic used define viewbox attribute SVG result. use girafe() 'R Markdown' document, recommend using arguments knitr options fig.width fig.height used instead. options list options girafe rendering, see opts_tooltip(), opts_hover(), opts_selection(), ... dependencies Additional widget HTML dependencies, see htmlwidgets::createWidget(). ... arguments passed dsvg()","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/girafe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a girafe object — girafe","text":"Use geom_zzz_interactive create interactive graphical elements. Difference original functions extra aesthetics understood: interactive_parameters. Tooltips can displayed mouse graphical elements. id associated points, get animated mouse can selected used shiny apps. click actions can set javascript instructions. option used simultaneously selections Shiny applications features \"click\" features. zoom effect set, \"zoom activate\", \"zoom desactivate\" \"zoom init\" buttons available toolbar. selection type set 'multiple' (Shiny applications), lasso selection lasso anti-selections buttons available toolbar.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/girafe.html","id":"widget-options","dir":"Reference","previous_headings":"","what":"Widget options","title":"Create a girafe object — girafe","text":"girafe animations can customized function girafe_options(). Options available customize tooltips, hover effects, zoom effects selection effects toolbar.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/girafe.html","id":"widget-sizing","dir":"Reference","previous_headings":"","what":"Widget sizing","title":"Create a girafe object — girafe","text":"girafe graphics responsive, mean, resized according container. two responsive behavior implementations: one Shiny applications flexdashboard documents one documents (.e. R markdown saveWidget). Graphics created R graphic device (.e pdf, png, svg ) need arguments width height define graphic region. Arguments width_svg height_svg used corresponding values. defining aspect ratio graphic. proportion always respected graph displayed. girafe graphic Shiny application, graphic resized according arguments width height function girafeOutput. Default values '100\\ outer bounding box graphic (HTML element contain graphic aspect ratio). girafe graphic R markdown document (producing HTML document), graphic resized according argument width function girafe. value beeing used define relative width graphic within HTML container. height automatically adjusted regarding argument width aspect ratio.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/girafe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a girafe object — girafe","text":"","code":"library(ggplot2)  dataset <- mtcars dataset$carname <- row.names(mtcars)  gg_point <- ggplot(   data = dataset,   mapping = aes(     x = wt, y = qsec, color = disp,     tooltip = carname, data_id = carname   ) ) +   geom_point_interactive() +   theme_minimal()  x <- girafe(ggobj = gg_point)  if (interactive()) {   print(x) }"},{"path":"https://davidgohel.github.io/ggiraph/reference/girafeOutput.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a girafe output element — girafeOutput","title":"Create a girafe output element — girafeOutput","text":"Render girafe within application page.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/girafeOutput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a girafe output element — girafeOutput","text":"","code":"girafeOutput(outputId, width = \"100%\", height = NULL)"},{"path":"https://davidgohel.github.io/ggiraph/reference/girafeOutput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a girafe output element — girafeOutput","text":"outputId output variable read girafe . use special JavaScript characters period . id, create JavaScript error. width widget width, default value set graphic can cover entire available horizontal space. height widget height, default value NULL width adaptation restricted. height defined according width used aspect ratio. use value height specific reason want strictly control size.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/girafeOutput.html","id":"size-control","dir":"Reference","previous_headings":"","what":"Size control","title":"Create a girafe output element — girafeOutput","text":"want control fixed size, use opts_sizing(rescale = FALSE) set chart size girafe(width_svg=..., height_svg=...). want graphic fit available width, use opts_sizing(rescale = TRUE) set size graphic girafe(width_svg=..., height_svg=...), size define aspect ratio.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/girafe_css.html","id":null,"dir":"Reference","previous_headings":"","what":"CSS creation helper — girafe_css","title":"CSS creation helper — girafe_css","text":"allows specifying individual styles various SVG elements.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/girafe_css.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CSS creation helper — girafe_css","text":"","code":"girafe_css(   css,   text = NULL,   point = NULL,   line = NULL,   area = NULL,   image = NULL )"},{"path":"https://davidgohel.github.io/ggiraph/reference/girafe_css.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CSS creation helper — girafe_css","text":"css generic css style text Override style text elements (svg:text) point Override style point elements (svg:circle) line Override style line elements (svg:line, svg:polyline) area Override style area elements (svg:rect, svg:polygon, svg:path) image Override style image elements (svg:image)","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/girafe_css.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CSS creation helper — girafe_css","text":"css scalar character","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/girafe_css.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CSS creation helper — girafe_css","text":"","code":"library(ggiraph)  girafe_css(   css = \"fill:orange;stroke:gray;\",   text = \"stroke:none; font-size: larger\",   line = \"fill:none\",   area = \"stroke-width:3px\",   point = \"stroke-width:3px\",   image = \"outline:2px red\" ) #> [1] \"/*GIRAFE CSS*/._CLASSNAME_ { fill:orange;stroke:gray; }\\ntext._CLASSNAME_ { stroke:none; font-size: larger }\\ncircle._CLASSNAME_ { stroke-width:3px }\\nline._CLASSNAME_, polyline._CLASSNAME_ { fill:none }\\nrect._CLASSNAME_, polygon._CLASSNAME_, path._CLASSNAME_ { stroke-width:3px }\\nimage._CLASSNAME_ { outline:2px red }\""},{"path":"https://davidgohel.github.io/ggiraph/reference/girafe_css_bicolor.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for a 'girafe' css string — girafe_css_bicolor","title":"Helper for a 'girafe' css string — girafe_css_bicolor","text":"allows creation css set individual styles animation 'girafe' elements. used model based simple pattern works time girafe hover effects selection effects. sets properties based primary secondary color.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/girafe_css_bicolor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper for a 'girafe' css string — girafe_css_bicolor","text":"","code":"girafe_css_bicolor(primary = \"orange\", secondary = \"gray\")"},{"path":"https://davidgohel.github.io/ggiraph/reference/girafe_css_bicolor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for a 'girafe' css string — girafe_css_bicolor","text":"primary, secondary colors used define animations fill stroke properties text, lines, areas, points images 'girafe' outputs.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/girafe_css_bicolor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper for a 'girafe' css string — girafe_css_bicolor","text":"","code":"library(ggplot2) library(ggiraph)  dat <- mtcars dat$id <- \"id\" dat$label <- \"a line\" dat <- dat[order(dat$wt), ]  p <- ggplot(   data = dat,   mapping = aes(     x = wt, y = mpg, data_id = id, tooltip = label)) +   geom_line_interactive(color = \"white\", size  = .75,                         hover_nearest = TRUE) +   theme_dark() +   theme(plot.background = element_rect(fill=\"black\"),         panel.background = element_rect(fill=\"black\"),         text = element_text(colour = \"white\"),         axis.text = element_text(colour = \"white\")         )  x <- girafe(   ggobj = p,   options = list(     opts_hover(       css = girafe_css_bicolor(         primary = \"yellow\", secondary = \"black\")) )) if (interactive()) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/girafe_defaults.html","id":null,"dir":"Reference","previous_headings":"","what":"Get girafe defaults formatting properties — girafe_defaults","title":"Get girafe defaults formatting properties — girafe_defaults","text":"current formatting properties automatically applied every girafe produce. default values returned function.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/girafe_defaults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get girafe defaults formatting properties — girafe_defaults","text":"","code":"girafe_defaults(name = NULL)"},{"path":"https://davidgohel.github.io/ggiraph/reference/girafe_defaults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get girafe defaults formatting properties — girafe_defaults","text":"name optional, option's name return, one 'fonts', 'opts_sizing', 'opts_tooltip', 'opts_hover', 'opts_hover_key', 'opts_hover_inv', 'opts_hover_theme', 'opts_selection', 'opts_selection_inv', 'opts_selection_key', 'opts_selection_theme', 'opts_zoom', 'opts_toolbar'.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/girafe_defaults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get girafe defaults formatting properties — girafe_defaults","text":"list containing default values element selected argument name.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/girafe_defaults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get girafe defaults formatting properties — girafe_defaults","text":"","code":"girafe_defaults() #> $fonts #> $fonts$sans #> [1] \"DejaVu Sans\" #>  #> $fonts$serif #> [1] \"DejaVu serif\" #>  #> $fonts$symbol #> [1] \"DejaVu Sans\" #>  #> $fonts$mono #> [1] \"DejaVu Sans\" #>  #>  #> $opts_sizing #> $rescale #> [1] TRUE #>  #> $width #> [1] 1 #>  #> attr(,\"class\") #> [1] \"opts_sizing\" #>  #> $opts_tooltip #> $css #> [1] \".tooltip_SVGID_ { padding:5px;background:black;color:white;border-radius:2px;text-align:left; ; position:absolute;pointer-events:none;z-index:999;}\" #>  #> $placement #> [1] \"doc\" #>  #> $opacity #> [1] 0.9 #>  #> $offx #> [1] 10 #>  #> $offy #> [1] 10 #>  #> $use_cursor_pos #> [1] TRUE #>  #> $use_fill #> [1] FALSE #>  #> $use_stroke #> [1] FALSE #>  #> $delay_over #> [1] 200 #>  #> $delay_out #> [1] 500 #>  #> attr(,\"class\") #> [1] \"opts_tooltip\" #>  #> $opts_hover #> $css #> [1] \".hover_data_SVGID_ { fill:orange;stroke:black;cursor:pointer; }\\ntext.hover_data_SVGID_ { stroke:none;fill:orange; }\\ncircle.hover_data_SVGID_ { fill:orange;stroke:black; }\\nline.hover_data_SVGID_, polyline.hover_data_SVGID_ { fill:none;stroke:orange; }\\nrect.hover_data_SVGID_, polygon.hover_data_SVGID_, path.hover_data_SVGID_ { fill:orange;stroke:none; }\\nimage.hover_data_SVGID_ { stroke:orange; }\" #>  #> $reactive #> [1] TRUE #>  #> $nearest_distance #> NULL #>  #> attr(,\"class\") #> [1] \"opts_hover\" #>  #> $opts_hover_key #> $css #> [1] \".hover_key_SVGID_ { fill:orange;stroke:black;cursor:pointer; }\\ntext.hover_key_SVGID_ { stroke:none;fill:orange; }\\ncircle.hover_key_SVGID_ { fill:orange;stroke:black; }\\nline.hover_key_SVGID_, polyline.hover_key_SVGID_ { fill:none;stroke:orange; }\\nrect.hover_key_SVGID_, polygon.hover_key_SVGID_, path.hover_key_SVGID_ { fill:orange;stroke:none; }\\nimage.hover_key_SVGID_ { stroke:orange; }\" #>  #> $reactive #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"opts_hover_key\" #>  #> $opts_hover_theme #> $css #> [1] \".hover_theme_SVGID_ { fill:orange;stroke:black;cursor:pointer; }\\ntext.hover_theme_SVGID_ { stroke:none;fill:orange; }\\ncircle.hover_theme_SVGID_ { fill:orange;stroke:black; }\\nline.hover_theme_SVGID_, polyline.hover_theme_SVGID_ { fill:none;stroke:orange; }\\nrect.hover_theme_SVGID_, polygon.hover_theme_SVGID_, path.hover_theme_SVGID_ { fill:orange;stroke:none; }\\nimage.hover_theme_SVGID_ { stroke:orange; }\" #>  #> $reactive #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"opts_hover_theme\" #>  #> $opts_hover_inv #> $css #> [1] \"\" #>  #> attr(,\"class\") #> [1] \"opts_hover_inv\" #>  #> $opts_selection #> $css #> [1] \".select_data_SVGID_ { fill:red;stroke:black;cursor:pointer; }\\ntext.select_data_SVGID_ { stroke:none;fill:red; }\\ncircle.select_data_SVGID_ { fill:red;stroke:black; }\\nline.select_data_SVGID_, polyline.select_data_SVGID_ { fill:none;stroke:red; }\\nrect.select_data_SVGID_, polygon.select_data_SVGID_, path.select_data_SVGID_ { fill:red;stroke:none; }\\nimage.select_data_SVGID_ { stroke:red; }\" #>  #> $type #> [1] \"multiple\" #>  #> $only_shiny #> [1] TRUE #>  #> $selected #> character(0) #>  #> attr(,\"class\") #> [1] \"opts_selection\" #>  #> $opts_selection_inv #> $css #> [1] \"\" #>  #> attr(,\"class\") #> [1] \"opts_selection_inv\" #>  #> $opts_selection_key #> $css #> [1] \".select_key_SVGID_ { fill:red;stroke:black;cursor:pointer; }\\ntext.select_key_SVGID_ { stroke:none;fill:red; }\\ncircle.select_key_SVGID_ { fill:red;stroke:black; }\\nline.select_key_SVGID_, polyline.select_key_SVGID_ { fill:none;stroke:red; }\\nrect.select_key_SVGID_, polygon.select_key_SVGID_, path.select_key_SVGID_ { fill:red;stroke:none; }\\nimage.select_key_SVGID_ { stroke:red; }\" #>  #> $type #> [1] \"single\" #>  #> $only_shiny #> [1] TRUE #>  #> $selected #> character(0) #>  #> attr(,\"class\") #> [1] \"opts_selection_key\" #>  #> $opts_selection_theme #> $css #> [1] \".select_theme_SVGID_ { fill:red;stroke:black;cursor:pointer; }\\ntext.select_theme_SVGID_ { stroke:none;fill:red; }\\ncircle.select_theme_SVGID_ { fill:red;stroke:black; }\\nline.select_theme_SVGID_, polyline.select_theme_SVGID_ { fill:none;stroke:red; }\\nrect.select_theme_SVGID_, polygon.select_theme_SVGID_, path.select_theme_SVGID_ { fill:red;stroke:none; }\\nimage.select_theme_SVGID_ { stroke:red; }\" #>  #> $type #> [1] \"single\" #>  #> $only_shiny #> [1] TRUE #>  #> $selected #> character(0) #>  #> attr(,\"class\") #> [1] \"opts_selection_theme\" #>  #> $opts_zoom #> $min #> [1] 1 #>  #> $max #> [1] 1 #>  #> $duration #> [1] 300 #>  #> attr(,\"class\") #> [1] \"opts_zoom\" #>  #> $opts_toolbar #> $position #> [1] \"topright\" #>  #> $pngname #> [1] \"diagram\" #>  #> $tooltips #> NULL #>  #> $fixed #> [1] FALSE #>  #> $hidden #> character(0) #>  #> $delay_over #> [1] 200 #>  #> $delay_out #> [1] 500 #>  #> attr(,\"class\") #> [1] \"opts_toolbar\" #>"},{"path":"https://davidgohel.github.io/ggiraph/reference/girafe_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Set girafe options — girafe_options","title":"Set girafe options — girafe_options","text":"Defines animation options related girafe() object.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/girafe_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set girafe options — girafe_options","text":"","code":"girafe_options(x, ...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/girafe_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set girafe options — girafe_options","text":"x girafe object. ... set options defined calls opts_* functions sizingPolicy htmlwidgets (effect within shiny context).","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/girafe_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set girafe options — girafe_options","text":"","code":"library(ggplot2) library(htmlwidgets)  dataset <- mtcars dataset$carname = row.names(mtcars)  gg_point = ggplot( data = dataset,     mapping = aes(x = wt, y = qsec, color = disp,     tooltip = carname, data_id = carname) ) +   geom_point_interactive() + theme_minimal()  x <- girafe(ggobj = gg_point) x <- girafe_options(x = x,     opts_tooltip(opacity = .7),     opts_zoom(min = .5, max = 4),     sizingPolicy(defaultWidth = \"100%\", defaultHeight = \"300px\"),     opts_hover(css = \"fill:red;stroke:orange;r:5pt;\") )  if(interactive()){   print(x) }"},{"path":"https://davidgohel.github.io/ggiraph/reference/guide_bins_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive bins guide — guide_bins_interactive","title":"Create interactive bins guide — guide_bins_interactive","text":"guide based guide_bins(). See documentation function details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/guide_bins_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive bins guide — guide_bins_interactive","text":"","code":"guide_bins_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/guide_bins_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive bins guide — guide_bins_interactive","text":"... arguments passed base function.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/guide_bins_interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive bins guide — guide_bins_interactive","text":"interactive guide object.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/guide_bins_interactive.html","id":"details-for-interactive-scale-and-interactive-guide-functions","dir":"Reference","previous_headings":"","what":"Details for interactive scale and interactive guide functions","title":"Create interactive bins guide — guide_bins_interactive","text":"scales, interactive parameters can supplied arguments relevant function can scalar values vectors, depending number breaks (levels) type guide used. guides accept interactive parameter directly, receive scales. guide type legend, bins, colourbar coloursteps used, converted guide_legend_interactive(), guide_bins_interactive(), guide_colourbar_interactive() guide_coloursteps_interactive() respectively, already. length scale interactive parameter vector match length breaks. can also named vector, name correspond break name. can also defined function takes breaks input returns named unnamed vector values output. binned guides like bins coloursteps breaks include label breaks limits. number bins one less number breaks interactive parameters can constructed bin separately (look examples). colourbar guide raster mode, breaks vector, scalar 1 always, meaning interactive parameters scalar . colourbar guide non-raster mode, bar drawn using rectangles, breaks midpoints rectangle. interactive parameters , give interactivity key elements guide. provide interactivity rest elements guide, (title, labels, background, etc), relevant theme elements relevant guide arguments can used. guide arguments title.theme label.theme can defined element_text_interactive (fact, converted already), either directly via theme. See element_*_interactive section details.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/guide_bins_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive bins guide — guide_bins_interactive","text":"","code":"# add interactive bins guide to a ggplot ------- library(ggplot2) library(ggiraph)  set.seed(4393) dsmall <- diamonds[sample(nrow(diamonds), 1000), ] p <- ggplot(dsmall, aes(x, y)) +   stat_density_2d(     aes(       fill = after_stat(nlevel),       tooltip = paste(\"nlevel:\", after_stat(nlevel))     ),     geom = \"interactive_polygon\"   ) +   facet_grid(. ~ cut)  # add interactive binned scale and guide p1 <- p + scale_fill_viridis_b_interactive(   data_id = \"nlevel\",   tooltip = \"nlevel\",   guide = \"bins\" ) x <- girafe(ggobj = p1) if (interactive()) print(x)  # set the keys separately p2 <- p + scale_fill_viridis_b_interactive(   data_id = function(breaks) {     sapply(seq_along(breaks), function(i) {       if (i < length(breaks)) {         paste(           min(breaks[i], breaks[i + 1], na.rm = TRUE),           max(breaks[i], breaks[i + 1], na.rm = TRUE),           sep = \"-\"         )       } else {         NA_character_       }     })   },   tooltip = function(breaks) {     sapply(seq_along(breaks), function(i) {       if (i < length(breaks)) {         paste(           min(breaks[i], breaks[i + 1], na.rm = TRUE),           max(breaks[i], breaks[i + 1], na.rm = TRUE),           sep = \"-\"         )       } else {         NA_character_       }     })   },   guide = \"bins\" ) x <- girafe(ggobj = p2) if (interactive()) print(x)   # make the title and labels interactive p3 <- p + scale_fill_viridis_c_interactive(   data_id = function(breaks) {     sapply(seq_along(breaks), function(i) {       if (i < length(breaks)) {         paste(           min(breaks[i], breaks[i + 1], na.rm = TRUE),           max(breaks[i], breaks[i + 1], na.rm = TRUE),           sep = \"-\"         )       } else {         NA_character_       }     })   },   tooltip = function(breaks) {     sapply(seq_along(breaks), function(i) {       if (i < length(breaks)) {         paste(           min(breaks[i], breaks[i + 1], na.rm = TRUE),           max(breaks[i], breaks[i + 1], na.rm = TRUE),           sep = \"-\"         )       } else {         NA_character_       }     })   },   guide = \"bins\",   name = label_interactive(\"nlevel\",     data_id = \"nlevel\",     tooltip = \"nlevel\"   ),   labels = function(breaks) {     label_interactive(       as.character(breaks),       data_id = as.character(breaks),       onclick = paste0(\"alert(\\\"\", as.character(breaks), \"\\\")\"),       tooltip = as.character(breaks)     )   } ) x <- girafe(ggobj = p3) x <- girafe_options(   x,   opts_hover_key(girafe_css(\"stroke:red\", text = \"stroke:none;fill:red\")) ) if (interactive()) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/guide_colourbar_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive continuous colour bar guide — guide_colourbar_interactive","title":"Create interactive continuous colour bar guide — guide_colourbar_interactive","text":"guide based guide_colourbar(). See documentation function details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/guide_colourbar_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive continuous colour bar guide — guide_colourbar_interactive","text":"","code":"guide_colourbar_interactive(...)  guide_colorbar_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/guide_colourbar_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive continuous colour bar guide — guide_colourbar_interactive","text":"... arguments passed base function.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/guide_colourbar_interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive continuous colour bar guide — guide_colourbar_interactive","text":"interactive guide object.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/guide_colourbar_interactive.html","id":"details-for-interactive-scale-and-interactive-guide-functions","dir":"Reference","previous_headings":"","what":"Details for interactive scale and interactive guide functions","title":"Create interactive continuous colour bar guide — guide_colourbar_interactive","text":"scales, interactive parameters can supplied arguments relevant function can scalar values vectors, depending number breaks (levels) type guide used. guides accept interactive parameter directly, receive scales. guide type legend, bins, colourbar coloursteps used, converted guide_legend_interactive(), guide_bins_interactive(), guide_colourbar_interactive() guide_coloursteps_interactive() respectively, already. length scale interactive parameter vector match length breaks. can also named vector, name correspond break name. can also defined function takes breaks input returns named unnamed vector values output. binned guides like bins coloursteps breaks include label breaks limits. number bins one less number breaks interactive parameters can constructed bin separately (look examples). colourbar guide raster mode, breaks vector, scalar 1 always, meaning interactive parameters scalar . colourbar guide non-raster mode, bar drawn using rectangles, breaks midpoints rectangle. interactive parameters , give interactivity key elements guide. provide interactivity rest elements guide, (title, labels, background, etc), relevant theme elements relevant guide arguments can used. guide arguments title.theme label.theme can defined element_text_interactive (fact, converted already), either directly via theme. See element_*_interactive section details.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/guide_colourbar_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive continuous colour bar guide — guide_colourbar_interactive","text":"","code":"# add interactive colourbar guide to a ggplot ------- library(ggplot2) library(ggiraph)  df <- expand.grid(x = 0:5, y = 0:5) df$z <- runif(nrow(df))  p <- ggplot(df, aes(x, y, fill = z, tooltip = \"tooltip\")) +   geom_raster_interactive()  # add an interactive scale (guide is colourbar) p1 <- p + scale_fill_gradient_interactive(   data_id = \"colourbar\",   onclick = \"alert(\\\"colourbar\\\")\",   tooltip = \"colourbar\" ) x <- girafe(ggobj = p1) if (interactive()) print(x)  # make the legend title interactive p2 <- p + scale_fill_gradient_interactive(   data_id = \"colourbar\",   onclick = \"alert(\\\"colourbar\\\")\",   tooltip = \"colourbar\",   name = label_interactive(     \"z\",     data_id = \"colourbar\",     onclick = \"alert(\\\"colourbar\\\")\",     tooltip = \"colourbar\"   ) ) x <- girafe(ggobj = p2) x <- girafe_options(   x,   opts_hover_key(girafe_css(\"stroke:red\", text = \"stroke:none;fill:red\")) ) if (interactive()) print(x)  # make the legend labels interactive p3 <- p + scale_fill_gradient_interactive(   data_id = \"colourbar\",   onclick = \"alert(\\\"colourbar\\\")\",   tooltip = \"colourbar\",   name = label_interactive(     \"z\",     data_id = \"colourbar\",     onclick = \"alert(\\\"colourbar\\\")\",     tooltip = \"colourbar\"   ),   labels = function(breaks) {     lapply(breaks, function(abreak) label_interactive(       as.character(abreak),       data_id = paste0(\"colourbar\", abreak),       onclick = \"alert(\\\"colourbar\\\")\",       tooltip = paste0(\"colourbar\", abreak)     ))   } ) x <- girafe(ggobj = p3) x <- girafe_options(   x,   opts_hover_key(girafe_css(\"stroke:red\", text = \"stroke:none;fill:red\")) ) if (interactive()) print(x)  # also via the guide p4 <- p + scale_fill_gradient_interactive(   data_id = \"colourbar\",   onclick = \"alert(\\\"colourbar\\\")\",   tooltip = \"colourbar\",   guide = guide_colourbar_interactive(     title.theme = element_text_interactive(       size = 8,       data_id = \"colourbar\",       onclick = \"alert(\\\"colourbar\\\")\",       tooltip = \"colourbar\"     ),     label.theme = element_text_interactive(       size = 8,       data_id = \"colourbar\",       onclick = \"alert(\\\"colourbar\\\")\",       tooltip = \"colourbar\"     )   ) ) x <- girafe(ggobj = p4) x <- girafe_options(   x,   opts_hover_key(girafe_css(\"stroke:red\", text = \"stroke:none;fill:red\")) ) if (interactive()) print(x)  # make the legend background interactive p5 <- p4 + theme(   legend.background = element_rect_interactive(     data_id = \"colourbar\",     onclick = \"alert(\\\"colourbar\\\")\",     tooltip = \"colourbar\"   ) ) x <- girafe(ggobj = p5) x <- girafe_options(   x,   opts_hover_key(girafe_css(\"stroke:red\", text = \"stroke:none;fill:red\")) ) if (interactive()) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/guide_coloursteps_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive colorsteps guide — guide_coloursteps_interactive","title":"Create interactive colorsteps guide — guide_coloursteps_interactive","text":"guide based guide_coloursteps(). See documentation function details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/guide_coloursteps_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive colorsteps guide — guide_coloursteps_interactive","text":"","code":"guide_coloursteps_interactive(...)  guide_colorsteps_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/guide_coloursteps_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive colorsteps guide — guide_coloursteps_interactive","text":"... arguments passed base function.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/guide_coloursteps_interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive colorsteps guide — guide_coloursteps_interactive","text":"interactive guide object.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/guide_coloursteps_interactive.html","id":"details-for-interactive-scale-and-interactive-guide-functions","dir":"Reference","previous_headings":"","what":"Details for interactive scale and interactive guide functions","title":"Create interactive colorsteps guide — guide_coloursteps_interactive","text":"scales, interactive parameters can supplied arguments relevant function can scalar values vectors, depending number breaks (levels) type guide used. guides accept interactive parameter directly, receive scales. guide type legend, bins, colourbar coloursteps used, converted guide_legend_interactive(), guide_bins_interactive(), guide_colourbar_interactive() guide_coloursteps_interactive() respectively, already. length scale interactive parameter vector match length breaks. can also named vector, name correspond break name. can also defined function takes breaks input returns named unnamed vector values output. binned guides like bins coloursteps breaks include label breaks limits. number bins one less number breaks interactive parameters can constructed bin separately (look examples). colourbar guide raster mode, breaks vector, scalar 1 always, meaning interactive parameters scalar . colourbar guide non-raster mode, bar drawn using rectangles, breaks midpoints rectangle. interactive parameters , give interactivity key elements guide. provide interactivity rest elements guide, (title, labels, background, etc), relevant theme elements relevant guide arguments can used. guide arguments title.theme label.theme can defined element_text_interactive (fact, converted already), either directly via theme. See element_*_interactive section details.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/guide_coloursteps_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive colorsteps guide — guide_coloursteps_interactive","text":"","code":"# add interactive coloursteps guide to a ggplot ------- library(ggplot2) library(ggiraph)  set.seed(4393) dsmall <- diamonds[sample(nrow(diamonds), 1000),] p <- ggplot(dsmall, aes(x, y)) +   stat_density_2d(aes(     fill = after_stat(nlevel),     tooltip = paste(\"nlevel:\", after_stat(nlevel))   ),   geom = \"interactive_polygon\") +   facet_grid(. ~ cut)  # add interactive binned scale, by default the guide is colorsteps p1 <- p + scale_fill_viridis_b_interactive(data_id = \"nlevel\",                                            tooltip = \"nlevel\") x <- girafe(ggobj = p1) if (interactive()) print(x)   # make the title and labels interactive p2 <- p + scale_fill_viridis_b_interactive(   data_id = \"nlevel\",   tooltip = \"nlevel\",   name = label_interactive(\"nlevel\", data_id = \"nlevel\",                            tooltip = \"nlevel\"),   labels = function(breaks) {     l <- lapply(breaks, function(br) {       label_interactive(         as.character(br),         data_id = as.character(br),         onclick = paste0(\"alert(\\\"\", as.character(br), \"\\\")\"),         tooltip = as.character(br)       )     })     l   } ) x <- girafe(ggobj = p2) x <- girafe_options(x,                     opts_hover_key(girafe_css(\"stroke:red\", text=\"stroke:none;fill:red\"))) if (interactive()) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/guide_legend_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive legend guide — guide_legend_interactive","title":"Create interactive legend guide — guide_legend_interactive","text":"guide based guide_legend(). See documentation function details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/guide_legend_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive legend guide — guide_legend_interactive","text":"","code":"guide_legend_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/guide_legend_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive legend guide — guide_legend_interactive","text":"... arguments passed base function.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/guide_legend_interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive legend guide — guide_legend_interactive","text":"interactive guide object.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/guide_legend_interactive.html","id":"details-for-interactive-scale-and-interactive-guide-functions","dir":"Reference","previous_headings":"","what":"Details for interactive scale and interactive guide functions","title":"Create interactive legend guide — guide_legend_interactive","text":"scales, interactive parameters can supplied arguments relevant function can scalar values vectors, depending number breaks (levels) type guide used. guides accept interactive parameter directly, receive scales. guide type legend, bins, colourbar coloursteps used, converted guide_legend_interactive(), guide_bins_interactive(), guide_colourbar_interactive() guide_coloursteps_interactive() respectively, already. length scale interactive parameter vector match length breaks. can also named vector, name correspond break name. can also defined function takes breaks input returns named unnamed vector values output. binned guides like bins coloursteps breaks include label breaks limits. number bins one less number breaks interactive parameters can constructed bin separately (look examples). colourbar guide raster mode, breaks vector, scalar 1 always, meaning interactive parameters scalar . colourbar guide non-raster mode, bar drawn using rectangles, breaks midpoints rectangle. interactive parameters , give interactivity key elements guide. provide interactivity rest elements guide, (title, labels, background, etc), relevant theme elements relevant guide arguments can used. guide arguments title.theme label.theme can defined element_text_interactive (fact, converted already), either directly via theme. See element_*_interactive section details.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/guide_legend_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive legend guide — guide_legend_interactive","text":"","code":"# add interactive discrete legend guide to a ggplot ------- library(ggplot2) library(ggiraph)  dat <- data.frame(   name = c( \"Guy\", \"Ginette\", \"David\", \"Cedric\", \"Frederic\" ),   gender = c( \"Male\", \"Female\", \"Male\", \"Male\", \"Male\" ),   height = c(169, 160, 171, 172, 171 ) ) p <- ggplot(dat, aes( x = name, y = height, fill = gender,                       data_id = name ) ) +   geom_bar_interactive(stat = \"identity\")  # add interactive scale (guide is legend) p1 <- p +   scale_fill_manual_interactive(     values = c(Male = \"#0072B2\", Female = \"#009E73\"),     data_id = c(Female = \"Female\", Male = \"Male\"),     tooltip = c(Male = \"Male\", Female = \"Female\")   ) x <- girafe(ggobj = p1) if (interactive()) print(x)  # make the title interactive too p2 <- p +   scale_fill_manual_interactive(     name = label_interactive(\"gender\", tooltip=\"Gender levels\", data_id=\"legend.title\"),     values = c(Male = \"#0072B2\", Female = \"#009E73\"),     data_id = c(Female = \"Female\", Male = \"Male\"),     tooltip = c(Male = \"Male\", Female = \"Female\")   ) x <- girafe(ggobj = p2) x <- girafe_options(x,                     opts_hover_key(girafe_css(\"stroke:red\", text=\"stroke:none;fill:red\"))) if (interactive()) print(x)  # the interactive params can be functions too p3 <- p +   scale_fill_manual_interactive(     name = label_interactive(\"gender\", tooltip=\"Gender levels\", data_id=\"legend.title\"),     values = c(Male = \"#0072B2\", Female = \"#009E73\"),     data_id = function(breaks) { as.character(breaks)},     tooltip = function(breaks) { as.character(breaks)},     onclick = function(breaks) { paste0(\"alert(\\\"\", as.character(breaks), \"\\\")\") }   ) x <- girafe(ggobj = p3) x <- girafe_options(x,                     opts_hover_key(girafe_css(\"stroke:red\", text=\"stroke:none;fill:red\"))) if (interactive()) print(x)  # also via the guide p4 <- p + scale_fill_manual_interactive(   values = c(Male = \"#0072B2\", Female = \"#009E73\"),   data_id = function(breaks) { as.character(breaks)},   tooltip = function(breaks) { as.character(breaks)},   onclick = function(breaks) { paste0(\"alert(\\\"\", as.character(breaks), \"\\\")\") },   guide = guide_legend_interactive(     title.theme = element_text_interactive(       size = 8,       data_id = \"legend.title\",       onclick = \"alert(\\\"Gender levels\\\")\",       tooltip = \"Gender levels\"     ),     label.theme = element_text_interactive(       size = 8     )   ) ) x <- girafe(ggobj = p4) x <- girafe_options(x,                     opts_hover_key(girafe_css(\"stroke:red\", text=\"stroke:none;fill:red\"))) if (interactive()) print(x)  # make the legend labels interactive p5 <- p +   scale_fill_manual_interactive(     name = label_interactive(\"gender\", tooltip=\"Gender levels\", data_id=\"legend.title\"),     values = c(Male = \"#0072B2\", Female = \"#009E73\"),     data_id = function(breaks) { as.character(breaks)},     tooltip = function(breaks) { as.character(breaks)},     onclick = function(breaks) { paste0(\"alert(\\\"\", as.character(breaks), \"\\\")\") },     labels = function(breaks) {       lapply(breaks, function(br) {         label_interactive(           as.character(br),           data_id = as.character(br),           onclick = paste0(\"alert(\\\"\", as.character(br), \"\\\")\"),           tooltip = as.character(br)         )       })     }   ) x <- girafe(ggobj = p5) x <- girafe_options(x,                     opts_hover_key(girafe_css(\"stroke:red\", text=\"stroke:none;fill:red\"))) if (interactive()) print(x) # add interactive continuous legend guide to a ggplot ------- library(ggplot2) library(ggiraph)  set.seed(4393) dsmall <- diamonds[sample(nrow(diamonds), 1000),] p <- ggplot(dsmall, aes(x, y)) +   stat_density_2d(aes(     fill = after_stat(nlevel),     tooltip = paste(\"nlevel:\", after_stat(nlevel))   ),   geom = \"interactive_polygon\") +   facet_grid(. ~ cut)  # add interactive scale, by default the guide is a colourbar p1 <- p + scale_fill_viridis_c_interactive(data_id = \"nlevel\",                                            tooltip = \"nlevel\") x <- girafe(ggobj = p1) if (interactive()) print(x)  # make it legend p2 <- p + scale_fill_viridis_c_interactive(data_id = \"nlevel\",                                            tooltip = \"nlevel\",                                            guide = \"legend\") x <- girafe(ggobj = p2) if (interactive()) print(x)  # set the keys separately p3 <- p + scale_fill_viridis_c_interactive(   data_id = function(breaks) {     as.character(breaks)   },   tooltip = function(breaks) {     as.character(breaks)   },   guide = \"legend\" ) x <- girafe(ggobj = p3) if (interactive()) print(x)   # make the title and labels interactive p4 <- p + scale_fill_viridis_c_interactive(   data_id = function(breaks) {     as.character(breaks)   },   tooltip = function(breaks) {     as.character(breaks)   },   guide = \"legend\",   name = label_interactive(\"nlevel\", data_id = \"nlevel\",                            tooltip = \"nlevel\"),   labels = function(breaks) {     label_interactive(       as.character(breaks),       data_id = as.character(breaks),       onclick = paste0(\"alert(\\\"\", as.character(breaks), \"\\\")\"),       tooltip = as.character(breaks)     )   } ) x <- girafe(ggobj = p4) x <- girafe_options(x,                     opts_hover_key(girafe_css(\"stroke:red\", text=\"stroke:none;fill:red\"))) if (interactive()) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/init_girafe_defaults.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-init animation defaults options — init_girafe_defaults","title":"Re-init animation defaults options — init_girafe_defaults","text":"Re-init defaults options package defaults.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/init_girafe_defaults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Re-init animation defaults options — init_girafe_defaults","text":"","code":"init_girafe_defaults()"},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_circle_grob.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive circles grob — interactive_circle_grob","title":"Create interactive circles grob — interactive_circle_grob","text":"grob based circleGrob(). See documentation function details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_circle_grob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive circles grob — interactive_circle_grob","text":"","code":"interactive_circle_grob(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_circle_grob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive circles grob — interactive_circle_grob","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_circle_grob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive circles grob — interactive_circle_grob","text":"interactive grob object.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_circle_grob.html","id":"details-for-interactive-grob-functions","dir":"Reference","previous_headings":"","what":"Details for interactive_*_grob functions","title":"Create interactive circles grob — interactive_circle_grob","text":"interactive parameters can supplied arguments relevant function can scalar values vectors depending params base function.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_curve_grob.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive curve grob — interactive_curve_grob","title":"Create interactive curve grob — interactive_curve_grob","text":"grob based curveGrob(). See documentation function details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_curve_grob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive curve grob — interactive_curve_grob","text":"","code":"interactive_curve_grob(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_curve_grob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive curve grob — interactive_curve_grob","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_curve_grob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive curve grob — interactive_curve_grob","text":"interactive grob object.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_curve_grob.html","id":"details-for-interactive-grob-functions","dir":"Reference","previous_headings":"","what":"Details for interactive_*_grob functions","title":"Create interactive curve grob — interactive_curve_grob","text":"interactive parameters can supplied arguments relevant function can scalar values vectors depending params base function.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive parameters — interactive_parameters","title":"Interactive parameters — interactive_parameters","text":"Throughout ggiraph functions add interactivity ggplot plot elements. user can control various aspects interactivity supplying special set parameters functions.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive parameters — interactive_parameters","text":"tooltip Tooltip text associate one elements. supplied tooltip shown element hovered. Plain text html supported. use html markup advised use htmltools::HTML() function order mark text html markup. text marked html opening/closing tags detected, existing newline characters (\\r\\n, \\r \\n) replaced <br/> tag. onclick Javascript code associate one elements. code executed element clicked. hover_css Individual css style associate one elements. css style applied element hovered overrides default style, set via opts_hover(), opts_hover_key() opts_hover_theme(). can also constructed girafe_css(), give control css different element types (see opts_hover() note). selected_css Individual css style associate one elements. css style applied element selected overrides default style, set via opts_selection(), opts_selection_key() opts_selection_theme(). can also constructed girafe_css(), give control css different element types (see opts_selection() note). data_id Identifier associate one elements. mandatory parameter hover selection interactivity desired. Identifiers available reactive input values Shiny applications. tooltip_fill Color use tooltip background opts_tooltip() use_fill TRUE. Useful setting tooltip background color geom_text_interactive() geom_label_interactive(), geom text color may tooltip text color. hover_nearest Set TRUE apply hover effect nearest element moving mouse. case mandatory also set data_id parameter","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_parameters.html","id":"details-for-interactive-geom-functions","dir":"Reference","previous_headings":"","what":"Details for interactive geom functions","title":"Interactive parameters — interactive_parameters","text":"interactive parameters can supplied two ways: aesthetics mapping argument (via aes()). way can mapped data columns apply set geometries. plain arguments geom_*_interactive function. way can set scalar value.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_parameters.html","id":"details-for-annotate-interactive-functions","dir":"Reference","previous_headings":"","what":"Details for annotate_*_interactive functions","title":"Interactive parameters — interactive_parameters","text":"interactive parameters can supplied arguments relevant function can scalar values vectors depending params base function.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_parameters.html","id":"details-for-interactive-scale-and-interactive-guide-functions","dir":"Reference","previous_headings":"","what":"Details for interactive scale and interactive guide functions","title":"Interactive parameters — interactive_parameters","text":"scales, interactive parameters can supplied arguments relevant function can scalar values vectors, depending number breaks (levels) type guide used. guides accept interactive parameter directly, receive scales. guide type legend, bins, colourbar coloursteps used, converted guide_legend_interactive(), guide_bins_interactive(), guide_colourbar_interactive() guide_coloursteps_interactive() respectively, already. length scale interactive parameter vector match length breaks. can also named vector, name correspond break name. can also defined function takes breaks input returns named unnamed vector values output. binned guides like bins coloursteps breaks include label breaks limits. number bins one less number breaks interactive parameters can constructed bin separately (look examples). colourbar guide raster mode, breaks vector, scalar 1 always, meaning interactive parameters scalar . colourbar guide non-raster mode, bar drawn using rectangles, breaks midpoints rectangle. interactive parameters , give interactivity key elements guide. provide interactivity rest elements guide, (title, labels, background, etc), relevant theme elements relevant guide arguments can used. guide arguments title.theme label.theme can defined element_text_interactive (fact, converted already), either directly via theme. See element_*_interactive section details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_parameters.html","id":"details-for-element-interactive-functions","dir":"Reference","previous_headings":"","what":"Details for element_*_interactive functions","title":"Interactive parameters — interactive_parameters","text":"interactive parameters can supplied arguments relevant function scalar values. theme text elements (element_text_interactive()), interactive parameters can also supplied setting label value, via labs() family functions setting scale/guide title key label. Instead setting character value element, function label_interactive() can used define interactive parameters go along label. parameters supplied way, override default values set theme via element_text_interactive() via guide's theme parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_parameters.html","id":"details-for-interactive-grob-functions","dir":"Reference","previous_headings":"","what":"Details for interactive_*_grob functions","title":"Interactive parameters — interactive_parameters","text":"interactive parameters can supplied arguments relevant function can scalar values vectors depending params base function.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_parameters.html","id":"custom-interactive-parameters","dir":"Reference","previous_headings":"","what":"Custom interactive parameters","title":"Interactive parameters — interactive_parameters","text":"argument extra_interactive_params can passed *_interactive functions (geoms, grobs, scales, labeller, labels theme elements), character vector additional names treated interactive parameters evaluating aesthetics. values eventually end attributes SVG elements output. Intended expert use.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_path_grob.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive path grob — interactive_path_grob","title":"Create interactive path grob — interactive_path_grob","text":"grob based pathGrob(). See documentation function details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_path_grob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive path grob — interactive_path_grob","text":"","code":"interactive_path_grob(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_path_grob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive path grob — interactive_path_grob","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_path_grob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive path grob — interactive_path_grob","text":"interactive grob object.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_path_grob.html","id":"details-for-interactive-grob-functions","dir":"Reference","previous_headings":"","what":"Details for interactive_*_grob functions","title":"Create interactive path grob — interactive_path_grob","text":"interactive parameters can supplied arguments relevant function can scalar values vectors depending params base function.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_points_grob.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive points grob — interactive_points_grob","title":"Create interactive points grob — interactive_points_grob","text":"grob based pointsGrob(). See documentation function details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_points_grob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive points grob — interactive_points_grob","text":"","code":"interactive_points_grob(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_points_grob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive points grob — interactive_points_grob","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_points_grob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive points grob — interactive_points_grob","text":"interactive grob object.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_points_grob.html","id":"details-for-interactive-grob-functions","dir":"Reference","previous_headings":"","what":"Details for interactive_*_grob functions","title":"Create interactive points grob — interactive_points_grob","text":"interactive parameters can supplied arguments relevant function can scalar values vectors depending params base function.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_polygon_grob.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive polygon grob — interactive_polygon_grob","title":"Create interactive polygon grob — interactive_polygon_grob","text":"grob based polygonGrob(). See documentation function details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_polygon_grob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive polygon grob — interactive_polygon_grob","text":"","code":"interactive_polygon_grob(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_polygon_grob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive polygon grob — interactive_polygon_grob","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_polygon_grob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive polygon grob — interactive_polygon_grob","text":"interactive grob object.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_polygon_grob.html","id":"details-for-interactive-grob-functions","dir":"Reference","previous_headings":"","what":"Details for interactive_*_grob functions","title":"Create interactive polygon grob — interactive_polygon_grob","text":"interactive parameters can supplied arguments relevant function can scalar values vectors depending params base function.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_polyline_grob.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive polyline grob — interactive_polyline_grob","title":"Create interactive polyline grob — interactive_polyline_grob","text":"grobs based polylineGrob() linesGrob(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_polyline_grob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive polyline grob — interactive_polyline_grob","text":"","code":"interactive_polyline_grob(...)  interactive_lines_grob(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_polyline_grob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive polyline grob — interactive_polyline_grob","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_polyline_grob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive polyline grob — interactive_polyline_grob","text":"interactive grob object.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_polyline_grob.html","id":"details-for-interactive-grob-functions","dir":"Reference","previous_headings":"","what":"Details for interactive_*_grob functions","title":"Create interactive polyline grob — interactive_polyline_grob","text":"interactive parameters can supplied arguments relevant function can scalar values vectors depending params base function.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_raster_grob.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive raster grob — interactive_raster_grob","title":"Create interactive raster grob — interactive_raster_grob","text":"grob based rasterGrob(). See documentation function details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_raster_grob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive raster grob — interactive_raster_grob","text":"","code":"interactive_raster_grob(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_raster_grob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive raster grob — interactive_raster_grob","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_raster_grob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive raster grob — interactive_raster_grob","text":"interactive grob object.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_raster_grob.html","id":"details-for-interactive-grob-functions","dir":"Reference","previous_headings":"","what":"Details for interactive_*_grob functions","title":"Create interactive raster grob — interactive_raster_grob","text":"interactive parameters can supplied arguments relevant function can scalar values vectors depending params base function.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_rect_grob.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive rectangle grob — interactive_rect_grob","title":"Create interactive rectangle grob — interactive_rect_grob","text":"grob based rectGrob(). See documentation function details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_rect_grob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive rectangle grob — interactive_rect_grob","text":"","code":"interactive_rect_grob(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_rect_grob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive rectangle grob — interactive_rect_grob","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_rect_grob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive rectangle grob — interactive_rect_grob","text":"interactive grob object.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_rect_grob.html","id":"details-for-interactive-grob-functions","dir":"Reference","previous_headings":"","what":"Details for interactive_*_grob functions","title":"Create interactive rectangle grob — interactive_rect_grob","text":"interactive parameters can supplied arguments relevant function can scalar values vectors depending params base function.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_roundrect_grob.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive rectangle grob — interactive_roundrect_grob","title":"Create interactive rectangle grob — interactive_roundrect_grob","text":"grob based roundrectGrob(). See documentation function details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_roundrect_grob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive rectangle grob — interactive_roundrect_grob","text":"","code":"interactive_roundrect_grob(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_roundrect_grob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive rectangle grob — interactive_roundrect_grob","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_roundrect_grob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive rectangle grob — interactive_roundrect_grob","text":"interactive grob object.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_roundrect_grob.html","id":"details-for-interactive-grob-functions","dir":"Reference","previous_headings":"","what":"Details for interactive_*_grob functions","title":"Create interactive rectangle grob — interactive_roundrect_grob","text":"interactive parameters can supplied arguments relevant function can scalar values vectors depending params base function.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_segments_grob.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive segments grob — interactive_segments_grob","title":"Create interactive segments grob — interactive_segments_grob","text":"grob based segmentsGrob. See documentation function details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_segments_grob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive segments grob — interactive_segments_grob","text":"","code":"interactive_segments_grob(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_segments_grob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive segments grob — interactive_segments_grob","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_segments_grob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive segments grob — interactive_segments_grob","text":"interactive grob object.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_segments_grob.html","id":"details-for-interactive-grob-functions","dir":"Reference","previous_headings":"","what":"Details for interactive_*_grob functions","title":"Create interactive segments grob — interactive_segments_grob","text":"interactive parameters can supplied arguments relevant function can scalar values vectors depending params base function.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_text_grob.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive text grob — interactive_text_grob","title":"Create interactive text grob — interactive_text_grob","text":"grob based textGrob. See documentation function details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_text_grob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive text grob — interactive_text_grob","text":"","code":"interactive_text_grob(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_text_grob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive text grob — interactive_text_grob","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_text_grob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive text grob — interactive_text_grob","text":"interactive grob object.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/interactive_text_grob.html","id":"details-for-interactive-grob-functions","dir":"Reference","previous_headings":"","what":"Details for interactive_*_grob functions","title":"Create interactive text grob — interactive_text_grob","text":"interactive parameters can supplied arguments relevant function can scalar values vectors depending params base function.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/label_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an interactive label — label_interactive","title":"Create an interactive label — label_interactive","text":"function returns object can used label via labs() family functions setting scale/guide name/title key label. passes interactive parameters theme element created via element_text_interactive() via interactive guide.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/label_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an interactive label — label_interactive","text":"","code":"label_interactive(label, ...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/label_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an interactive label — label_interactive","text":"label text label (scalar character) ... interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/label_interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an interactive label — label_interactive","text":"interactive label object","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/label_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an interactive label — label_interactive","text":"","code":"library(ggplot2) library(ggiraph)  gg_jitter <- ggplot(   mpg, aes(cyl, hwy, group = cyl)) +   geom_boxplot() +   labs(title =          label_interactive(            \"title\",            data_id = \"id_title\",            onclick = \"alert(\\\"title\\\")\",            tooltip = \"title\" )   ) +   theme(plot.title = element_text_interactive())  x <- girafe(ggobj = gg_jitter) if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/labeller_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct interactive labelling specification for facet strips — labeller_interactive","title":"Construct interactive labelling specification for facet strips — labeller_interactive","text":"function wrapper around labeller() allows user turn facet strip labels interactive labels via label_interactive(). requires theme()'s strip.text elements defined interactive theme elements via element_text_interactive(), see details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/labeller_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct interactive labelling specification for facet strips — labeller_interactive","text":"","code":"labeller_interactive(.mapping = NULL, ...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/labeller_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct interactive labelling specification for facet strips — labeller_interactive","text":".mapping set aesthetic mappings created aes() aes_(). provide mappings interactive_parameters. addition understands label parameter creating new label text. ... arguments passed base function labeller()","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/labeller_interactive.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct interactive labelling specification for facet strips — labeller_interactive","text":"aesthetics set provided via .mapping evaluated data provided ggplot2 facet. means variables facet available using inside aesthetic mappings. addition .label variable provides access produced label. See examples. plot's theme required strip texts interactive text elements. involves strip.text individually strip.text.x strip.text.y: theme(strip.text.x = element_text_interactive()) theme(strip.text.y = element_text_interactive())","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/labeller_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct interactive labelling specification for facet strips — labeller_interactive","text":"","code":"# use interactive labeller library(ggplot2) library(ggiraph)  p1 <- ggplot(mtcars, aes(x = mpg, y = wt)) +   geom_point_interactive(aes(tooltip = row.names(mtcars)))  # Always remember to set the theme's strip texts as interactive # no need to set any interactive parameters, they'll be assigned from the labels p1 <- p1 +   theme(     strip.text.x = element_text_interactive(),     strip.text.y = element_text_interactive()   )  # simple facet p <- p1 + facet_wrap_interactive(   vars(gear),   labeller = labeller_interactive(aes(tooltip = paste(\"Gear:\", gear))) ) x <- girafe(ggobj = p) if (interactive()) print(x)  # With two vars. When the .multi_line labeller argument is TRUE (default), # supply a different labeller for each var p <- p1 + facet_wrap_interactive(   vars(gear, vs),   labeller = labeller_interactive(     gear = labeller_interactive(aes(tooltip = paste(\"Gear:\", gear))),     vs = labeller_interactive(aes(tooltip = paste(\"VS:\", vs)))   ) ) x <- girafe(ggobj = p) if (interactive()) print(x)  # When the .multi_line argument is FALSE, the labels are joined and # the same happens with the data, so we can refer to both variables in the aesthetics! p <- p1 + facet_wrap_interactive(   vars(gear, vs),   labeller = labeller_interactive(     aes(tooltip = paste0(\"Gear: \", gear, \"\\nVS: \", vs)),     .multi_line = FALSE   ) ) x <- girafe(ggobj = p) if (interactive()) print(x)  # Example with facet_grid: p <- p1 + facet_grid_interactive(   vs + am ~ gear,   labeller = labeller(     gear = labeller_interactive(aes(       tooltip = paste(\"gear:\", gear), data_id = paste0(\"gear_\", gear)     )),     vs = labeller_interactive(aes(       tooltip = paste(\"VS:\", vs), data_id = paste0(\"vs_\", vs)     )),     am = labeller_interactive(aes(       tooltip = paste(\"AM:\", am), data_id = paste0(\"am_\", am)     ))   ) ) x <- girafe(ggobj = p) if (interactive()) print(x)  # Same with .rows and .cols and .multi_line = FALSE p <- p1 + facet_grid_interactive(   vs + am ~ gear,   labeller = labeller(     .cols = labeller_interactive(       .mapping = aes(tooltip = paste(\"gear:\", gear))     ),     .rows = labeller_interactive(       aes(tooltip = paste0(\"VS: \", vs, \"\\nAM: \", am)),       .multi_line = FALSE     )   ) ) x <- girafe(ggobj = p) if (interactive()) print(x)  # a more complex example p2 <- ggplot(msleep, aes(x = sleep_total, y = awake)) +   geom_point_interactive(aes(tooltip = name)) +   theme(     strip.text.x = element_text_interactive(),     strip.text.y = element_text_interactive()   )  # character vector as lookup table conservation_status <- c(   cd = \"Conservation Dependent\",   en = \"Endangered\",   lc = \"Least concern\",   nt = \"Near Threatened\",   vu = \"Vulnerable\",   domesticated = \"Domesticated\" )  # function to capitalize a string capitalize <- function(x) {   substr(x, 1, 1) <- toupper(substr(x, 1, 1))   x }  # function to cut a string and append an ellipsis cut_str <- function(x, width = 10) {   ind <- !is.na(x) & nchar(x) > width   x[ind] <- paste0(substr(x[ind], 1, width), \"...\")   x }  replace_nas <- function(x) {   ifelse(is.na(x), \"Not available\", x) }  # in this example we use the '.label' variable to access the produced label # and we set the 'label' aesthetic to modify the label p <- p2 + facet_grid_interactive(   vore ~ conservation,   labeller = labeller(     vore = labeller_interactive(       aes(tooltip = paste(\"Vore:\", replace_nas(.label))),       .default = capitalize     ),     conservation = labeller_interactive(       aes(         tooltip = paste(\"Conservation:\\n\", replace_nas(.label)),         label = cut_str(.label, 3)       ),       .default = conservation_status     )   ) )  x <- girafe(ggobj = p) if (interactive()) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/match_family.html","id":null,"dir":"Reference","previous_headings":"","what":"Find best family match with systemfonts — match_family","title":"Find best family match with systemfonts — match_family","text":"match_family() returns best font family match.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/match_family.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find best family match with systemfonts — match_family","text":"","code":"match_family(font = \"sans\", bold = TRUE, italic = TRUE, debug = NULL)"},{"path":"https://davidgohel.github.io/ggiraph/reference/match_family.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find best family match with systemfonts — match_family","text":"font family face match. bold Wheter match font featuring bold face. italic Wheter match font featuring italic face. debug deprecated","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/match_family.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find best family match with systemfonts — match_family","text":"","code":"match_family(\"sans\") #> [1] \"DejaVu Sans\" match_family(\"serif\") #> [1] \"DejaVu Serif\""},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_hover.html","id":null,"dir":"Reference","previous_headings":"","what":"Hover effect settings — opts_hover","title":"Hover effect settings — opts_hover","text":"Allows customization rendering graphic elements user hovers cursor (mouse pointer). Use opts_hover interactive geometries panels, opts_hover_key interactive scales/guides opts_hover_theme interactive theme elements. Use opts_hover_inv effect rest geometries, one hovered (inverted operation).","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_hover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hover effect settings — opts_hover","text":"","code":"opts_hover(css = NULL, reactive = FALSE, nearest_distance = NULL)  opts_hover_inv(css = NULL)  opts_hover_key(css = NULL, reactive = FALSE)  opts_hover_theme(css = NULL, reactive = FALSE)"},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_hover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hover effect settings — opts_hover","text":"css css associate elements hovered. must scalar character. can also constructed girafe_css(), give control css different element types. reactive TRUE, Shiny context, hovering set Shiny input values. nearest_distance scalar positive number defining maximum distance use using hover_nearest interactive parameter feature. default (NULL) set Infinity means distance limit. Setting 50, example, hover nearest element maximum 50 SVG units (pixels) distance mouse cursor.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_hover.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Hover effect settings — opts_hover","text":"IMPORTANT: applying fill style css argument, aware browser's CSS engine apply also line elements, use hovering feature. cause undesired effect. overcome , supply argument css using girafe_css(), order set fill style desired elements.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_hover.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hover effect settings — opts_hover","text":"","code":"library(ggplot2)  dataset <- mtcars dataset$carname = row.names(mtcars)  gg <- ggplot(   data = dataset,   mapping = aes(x = wt, y = qsec, color = disp,                 tooltip = carname, data_id = carname) ) +   geom_point_interactive() + theme_minimal()  x <- girafe(ggobj = gg) x <- girafe_options(x,   opts_hover(css = \"fill:wheat;stroke:orange;r:5pt;\") ) if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"Selection effect settings — opts_selection","title":"Selection effect settings — opts_selection","text":"Allows customization rendering selected graphic elements. Use opts_selection interactive geometries panels, opts_selection_key interactive scales/guides opts_selection_theme interactive theme elements. Use opts_selection_inv effect rest geometries, selected (inverted operation).","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selection effect settings — opts_selection","text":"","code":"opts_selection(   css = NULL,   type = c(\"multiple\", \"single\", \"none\"),   only_shiny = TRUE,   selected = character(0) )  opts_selection_inv(css = NULL)  opts_selection_key(   css = NULL,   type = c(\"single\", \"multiple\", \"none\"),   only_shiny = TRUE,   selected = character(0) )  opts_selection_theme(   css = NULL,   type = c(\"single\", \"multiple\", \"none\"),   only_shiny = TRUE,   selected = character(0) )"},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_selection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selection effect settings — opts_selection","text":"css css associate elements selected. must scalar character. can also constructed girafe_css(), give control css different element types. type selection mode (\"single\", \"multiple\", \"none\") widget Shiny application. only_shiny disable selections shiny context. selected character vector, id selected graph initialized.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_selection.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Selection effect settings — opts_selection","text":"IMPORTANT: applying fill style css argument, aware browser's CSS engine apply also line elements, use selection feature. cause undesired effect. overcome , supply argument css using girafe_css(), order set fill style desired elements.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_selection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Selection effect settings — opts_selection","text":"","code":"library(ggplot2)  dataset <- mtcars dataset$carname = row.names(mtcars)  gg <- ggplot(   data = dataset,   mapping = aes(x = wt, y = qsec, color = disp,                 tooltip = carname, data_id = carname) ) +   geom_point_interactive() + theme_minimal()  x <- girafe(ggobj = gg) x <- girafe_options(x,   opts_selection(type = \"multiple\", only_shiny = FALSE,     css = \"fill:red;stroke:gray;r:5pt;\") ) if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_sizing.html","id":null,"dir":"Reference","previous_headings":"","what":"Girafe sizing settings — opts_sizing","title":"Girafe sizing settings — opts_sizing","text":"Allows customization svg style sizing","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_sizing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Girafe sizing settings — opts_sizing","text":"","code":"opts_sizing(rescale = TRUE, width = 1)"},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_sizing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Girafe sizing settings — opts_sizing","text":"rescale FALSE, graphic resized dimensions exactly svg. TRUE graphic resize fit container width widget width ratio (0 < width <= 1).","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_sizing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Girafe sizing settings — opts_sizing","text":"","code":"library(ggplot2)  dataset <- mtcars dataset$carname = row.names(mtcars)  gg <- ggplot(   data = dataset,   mapping = aes(x = wt, y = qsec, color = disp,                 tooltip = carname, data_id = carname) ) +   geom_point_interactive() + theme_minimal()  x <- girafe(ggobj = gg) x <- girafe_options(x,   opts_sizing(rescale = FALSE) ) if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_toolbar.html","id":null,"dir":"Reference","previous_headings":"","what":"Toolbar settings — opts_toolbar","title":"Toolbar settings — opts_toolbar","text":"Allows customization toolbar","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_toolbar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Toolbar settings — opts_toolbar","text":"","code":"opts_toolbar(   position = c(\"topright\", \"top\", \"bottom\", \"topleft\", \"bottomleft\", \"bottomright\"),   saveaspng = TRUE,   pngname = \"diagram\",   tooltips = NULL,   hidden = NULL,   fixed = FALSE,   delay_mouseover = 200,   delay_mouseout = 500 )"},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_toolbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Toolbar settings — opts_toolbar","text":"position Position toolbar relative plot. One 'top', 'bottom', 'topleft', 'topright', 'bottomleft', 'bottomright' saveaspng Show (TRUE) hide (FALSE) 'download png' button. pngname default basename (without .png extension) use png file. tooltips named list tooltip labels buttons, adapting language. Passing NULL use default tooltips: list( lasso_select = 'lasso selection', lasso_deselect = 'lasso deselection', zoom_on = 'activate pan/zoom', zoom_off = 'deactivate pan/zoom', zoom_rect = 'zoom rectangle', zoom_reset = 'reset pan/zoom', saveaspng = 'download png' ) hidden character vector names buttons button groups hidden toolbar. Valid button groups: selection, zoom, misc Valid button names: lasso_select, lasso_deselect, zoom_onoff, zoom_rect, zoom_reset, saveaspng fixed FALSE (default), toolbar float graphic, TRUE, toolbar fixed always visible. delay_mouseover duration milliseconds transition associated toolbar display. delay_mouseout duration milliseconds transition associated toolbar end display.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_toolbar.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Toolbar settings — opts_toolbar","text":"saveaspng relies JavaScript promises, browsers natively support standard Promise object need polyfill (e.g. Internet Explorer version less 11 need ).","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_toolbar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Toolbar settings — opts_toolbar","text":"","code":"library(ggplot2)  dataset <- mtcars dataset$carname = row.names(mtcars)  gg <- ggplot(   data = dataset,   mapping = aes(x = wt, y = qsec, color = disp,                 tooltip = carname, data_id = carname) ) +   geom_point_interactive() + theme_minimal()  x <- girafe(ggobj = gg) x <- girafe_options(x,   opts_toolbar(position = \"top\") ) if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_tooltip.html","id":null,"dir":"Reference","previous_headings":"","what":"Tooltip settings — opts_tooltip","title":"Tooltip settings — opts_tooltip","text":"Settings used girafe() tooltip customisation.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_tooltip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tooltip settings — opts_tooltip","text":"","code":"opts_tooltip(   css = NULL,   offx = 10,   offy = 0,   use_cursor_pos = TRUE,   opacity = 0.9,   use_fill = FALSE,   use_stroke = FALSE,   delay_mouseover = 200,   delay_mouseout = 500,   placement = c(\"auto\", \"doc\", \"container\"),   zindex = 999 )"},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_tooltip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tooltip settings — opts_tooltip","text":"css extra css (added position: absolute;pointer-events: none;) used customize tooltip area. offx, offy tooltip x y offset use_cursor_pos cursor position used position tooltip (addition offx offy). Setting TRUE effect RStudio browser windows. opacity tooltip background opacity use_fill, use_stroke logical, use fill stroke properties color tooltip. delay_mouseover duration milliseconds transition associated tooltip display. delay_mouseout duration milliseconds transition associated tooltip end display. placement Defines container used tooltip element. can one \"auto\" (default), \"doc\" \"container\". doc: host document's body used tooltip container. tooltip may cover areas outside svg graphic. container: svg container used tooltip container. case tooltip content may wrap fit inside svg bounds. also inherit CSS styles transforms applied parent containers (like scaling slide presentation). auto: default, ggiraph choses best option according use cases. Usually redirects \"doc\", however xaringan context, redirects \"container\". zindex tooltip css z-index, default 999.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_tooltip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tooltip settings — opts_tooltip","text":"","code":"library(ggplot2)  dataset <- mtcars dataset$carname = row.names(mtcars)  gg <- ggplot(   data = dataset,   mapping = aes(x = wt, y = qsec, color = disp,                 tooltip = carname, data_id = carname) ) +   geom_point_interactive() + theme_minimal()  x <- girafe(ggobj = gg) x <- girafe_options(x,   opts_tooltip(opacity = .7,     offx = 20, offy = -10,     use_fill = TRUE, use_stroke = TRUE,     delay_mouseout = 1000) ) if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_zoom.html","id":null,"dir":"Reference","previous_headings":"","what":"Zoom settings — opts_zoom","title":"Zoom settings — opts_zoom","text":"Allows customization zoom.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_zoom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zoom settings — opts_zoom","text":"","code":"opts_zoom(min = 1, max = 1, duration = 300)"},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_zoom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zoom settings — opts_zoom","text":"min minimum zoom factor max maximum zoom factor duration duration zoom transitions, milliseconds","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/opts_zoom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Zoom settings — opts_zoom","text":"","code":"library(ggplot2)  dataset <- mtcars dataset$carname = row.names(mtcars)  gg <- ggplot(   data = dataset,   mapping = aes(x = wt, y = qsec, color = disp,                 tooltip = carname, data_id = carname) ) +   geom_point_interactive() + theme_minimal()  x <- girafe(ggobj = gg) x <- girafe_options(x,   opts_zoom(min = .7, max = 2) ) if( interactive() ) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/renderGirafe.html","id":null,"dir":"Reference","previous_headings":"","what":"Reactive version of girafe — renderGirafe","title":"Reactive version of girafe — renderGirafe","text":"Makes reactive version girafe object use Shiny.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/renderGirafe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reactive version of girafe — renderGirafe","text":"","code":"renderGirafe(expr, env = parent.frame(), quoted = FALSE, outputArgs = list())"},{"path":"https://davidgohel.github.io/ggiraph/reference/renderGirafe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reactive version of girafe — renderGirafe","text":"expr expression returns girafe() object. env environment evaluate expr. quoted expr quoted expression outputArgs list arguments passed implicit call girafeOutput() renderGirafe used interactive R Markdown document.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/renderggiraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Reactive version of ggiraph object — renderggiraph","title":"Reactive version of ggiraph object — renderggiraph","text":"Makes reactive version ggiraph object use Shiny. function now deprecated, users now use function renderGirafe().","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/renderggiraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reactive version of ggiraph object — renderggiraph","text":"","code":"renderggiraph(expr, env = parent.frame(), quoted = FALSE)"},{"path":"https://davidgohel.github.io/ggiraph/reference/renderggiraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reactive version of ggiraph object — renderggiraph","text":"expr expression returns ggiraph() object. env environment evaluate expr. quoted expr quoted expression","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/renderggiraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reactive version of ggiraph object — renderggiraph","text":"","code":"if (FALSE) { if( require(shiny) && interactive() ){   app_dir <- file.path( system.file(package = \"ggiraph\"), \"examples/shiny\" )   shinyAppDir(appDir = app_dir ) } }"},{"path":"https://davidgohel.github.io/ggiraph/reference/run_girafe_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Run shiny examples and see corresponding code — run_girafe_example","title":"Run shiny examples and see corresponding code — run_girafe_example","text":"Run shiny examples see corresponding code","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/run_girafe_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run shiny examples and see corresponding code — run_girafe_example","text":"","code":"run_girafe_example(name = \"crimes\")"},{"path":"https://davidgohel.github.io/ggiraph/reference/run_girafe_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run shiny examples and see corresponding code — run_girafe_example","text":"name application name, one cars, click_scale, crimes, DT, dynamic_ui, iris, maps modal.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_alpha_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive scales for alpha transparency — scale_alpha_interactive","title":"Create interactive scales for alpha transparency — scale_alpha_interactive","text":"scales based scale_alpha(), scale_alpha_continuous(), scale_alpha_discrete(), scale_alpha_binned(), scale_alpha_ordinal(), scale_alpha_date(), scale_alpha_datetime(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_alpha_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive scales for alpha transparency — scale_alpha_interactive","text":"","code":"scale_alpha_interactive(...)  scale_alpha_continuous_interactive(...)  scale_alpha_discrete_interactive(...)  scale_alpha_binned_interactive(...)  scale_alpha_ordinal_interactive(...)  scale_alpha_date_interactive(...)  scale_alpha_datetime_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_alpha_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive scales for alpha transparency — scale_alpha_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_alpha_interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive scales for alpha transparency — scale_alpha_interactive","text":"interactive scale object.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_alpha_interactive.html","id":"details-for-interactive-scale-and-interactive-guide-functions","dir":"Reference","previous_headings":"","what":"Details for interactive scale and interactive guide functions","title":"Create interactive scales for alpha transparency — scale_alpha_interactive","text":"scales, interactive parameters can supplied arguments relevant function can scalar values vectors, depending number breaks (levels) type guide used. guides accept interactive parameter directly, receive scales. guide type legend, bins, colourbar coloursteps used, converted guide_legend_interactive(), guide_bins_interactive(), guide_colourbar_interactive() guide_coloursteps_interactive() respectively, already. length scale interactive parameter vector match length breaks. can also named vector, name correspond break name. can also defined function takes breaks input returns named unnamed vector values output. binned guides like bins coloursteps breaks include label breaks limits. number bins one less number breaks interactive parameters can constructed bin separately (look examples). colourbar guide raster mode, breaks vector, scalar 1 always, meaning interactive parameters scalar . colourbar guide non-raster mode, bar drawn using rectangles, breaks midpoints rectangle. interactive parameters , give interactivity key elements guide. provide interactivity rest elements guide, (title, labels, background, etc), relevant theme elements relevant guide arguments can used. guide arguments title.theme label.theme can defined element_text_interactive (fact, converted already), either directly via theme. See element_*_interactive section details.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_colour_brewer_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive colorbrewer scales — scale_colour_brewer_interactive","title":"Create interactive colorbrewer scales — scale_colour_brewer_interactive","text":"scales based scale_colour_brewer(), scale_fill_brewer(), scale_colour_distiller(), scale_fill_distiller(), scale_colour_fermenter(), scale_fill_fermenter(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_colour_brewer_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive colorbrewer scales — scale_colour_brewer_interactive","text":"","code":"scale_colour_brewer_interactive(...)  scale_color_brewer_interactive(...)  scale_fill_brewer_interactive(...)  scale_colour_distiller_interactive(...)  scale_color_distiller_interactive(...)  scale_fill_distiller_interactive(...)  scale_colour_fermenter_interactive(...)  scale_color_fermenter_interactive(...)  scale_fill_fermenter_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_colour_brewer_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive colorbrewer scales — scale_colour_brewer_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_colour_brewer_interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive colorbrewer scales — scale_colour_brewer_interactive","text":"interactive scale object.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_colour_brewer_interactive.html","id":"details-for-interactive-scale-and-interactive-guide-functions","dir":"Reference","previous_headings":"","what":"Details for interactive scale and interactive guide functions","title":"Create interactive colorbrewer scales — scale_colour_brewer_interactive","text":"scales, interactive parameters can supplied arguments relevant function can scalar values vectors, depending number breaks (levels) type guide used. guides accept interactive parameter directly, receive scales. guide type legend, bins, colourbar coloursteps used, converted guide_legend_interactive(), guide_bins_interactive(), guide_colourbar_interactive() guide_coloursteps_interactive() respectively, already. length scale interactive parameter vector match length breaks. can also named vector, name correspond break name. can also defined function takes breaks input returns named unnamed vector values output. binned guides like bins coloursteps breaks include label breaks limits. number bins one less number breaks interactive parameters can constructed bin separately (look examples). colourbar guide raster mode, breaks vector, scalar 1 always, meaning interactive parameters scalar . colourbar guide non-raster mode, bar drawn using rectangles, breaks midpoints rectangle. interactive parameters , give interactivity key elements guide. provide interactivity rest elements guide, (title, labels, background, etc), relevant theme elements relevant guide arguments can used. guide arguments title.theme label.theme can defined element_text_interactive (fact, converted already), either directly via theme. See element_*_interactive section details.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_colour_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive colour scales — scale_colour_interactive","title":"Create interactive colour scales — scale_colour_interactive","text":"scales based scale_colour_continuous(), scale_fill_continuous(), scale_colour_grey(), scale_fill_grey(), scale_colour_hue(), scale_fill_hue(), scale_colour_binned(), scale_fill_binned(), scale_colour_discrete(), scale_fill_discrete(), scale_colour_date(), scale_fill_date(), scale_colour_datetime() scale_fill_datetime(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_colour_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive colour scales — scale_colour_interactive","text":"","code":"scale_colour_continuous_interactive(...)  scale_color_continuous_interactive(...)  scale_fill_continuous_interactive(...)  scale_colour_grey_interactive(...)  scale_color_grey_interactive(...)  scale_fill_grey_interactive(...)  scale_colour_hue_interactive(...)  scale_color_hue_interactive(...)  scale_fill_hue_interactive(...)  scale_colour_binned_interactive(...)  scale_color_binned_interactive(...)  scale_fill_binned_interactive(...)  scale_colour_discrete_interactive(...)  scale_color_discrete_interactive(...)  scale_fill_discrete_interactive(...)  scale_colour_date_interactive(...)  scale_color_date_interactive(...)  scale_fill_date_interactive(...)  scale_colour_datetime_interactive(...)  scale_color_datetime_interactive(...)  scale_fill_datetime_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_colour_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive colour scales — scale_colour_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_colour_interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive colour scales — scale_colour_interactive","text":"interactive scale object.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_colour_interactive.html","id":"details-for-interactive-scale-and-interactive-guide-functions","dir":"Reference","previous_headings":"","what":"Details for interactive scale and interactive guide functions","title":"Create interactive colour scales — scale_colour_interactive","text":"scales, interactive parameters can supplied arguments relevant function can scalar values vectors, depending number breaks (levels) type guide used. guides accept interactive parameter directly, receive scales. guide type legend, bins, colourbar coloursteps used, converted guide_legend_interactive(), guide_bins_interactive(), guide_colourbar_interactive() guide_coloursteps_interactive() respectively, already. length scale interactive parameter vector match length breaks. can also named vector, name correspond break name. can also defined function takes breaks input returns named unnamed vector values output. binned guides like bins coloursteps breaks include label breaks limits. number bins one less number breaks interactive parameters can constructed bin separately (look examples). colourbar guide raster mode, breaks vector, scalar 1 always, meaning interactive parameters scalar . colourbar guide non-raster mode, bar drawn using rectangles, breaks midpoints rectangle. interactive parameters , give interactivity key elements guide. provide interactivity rest elements guide, (title, labels, background, etc), relevant theme elements relevant guide arguments can used. guide arguments title.theme label.theme can defined element_text_interactive (fact, converted already), either directly via theme. See element_*_interactive section details.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_colour_steps_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive binned gradient colour scales — scale_colour_steps_interactive","title":"Create interactive binned gradient colour scales — scale_colour_steps_interactive","text":"scales based scale_colour_steps(), scale_fill_steps(), scale_colour_steps2(), scale_fill_steps2(), scale_colour_stepsn() scale_fill_stepsn(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_colour_steps_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive binned gradient colour scales — scale_colour_steps_interactive","text":"","code":"scale_colour_steps_interactive(...)  scale_color_steps_interactive(...)  scale_fill_steps_interactive(...)  scale_colour_steps2_interactive(...)  scale_color_steps2_interactive(...)  scale_fill_steps2_interactive(...)  scale_colour_stepsn_interactive(...)  scale_color_stepsn_interactive(...)  scale_fill_stepsn_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_colour_steps_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive binned gradient colour scales — scale_colour_steps_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_colour_steps_interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive binned gradient colour scales — scale_colour_steps_interactive","text":"interactive scale object.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_colour_steps_interactive.html","id":"details-for-interactive-scale-and-interactive-guide-functions","dir":"Reference","previous_headings":"","what":"Details for interactive scale and interactive guide functions","title":"Create interactive binned gradient colour scales — scale_colour_steps_interactive","text":"scales, interactive parameters can supplied arguments relevant function can scalar values vectors, depending number breaks (levels) type guide used. guides accept interactive parameter directly, receive scales. guide type legend, bins, colourbar coloursteps used, converted guide_legend_interactive(), guide_bins_interactive(), guide_colourbar_interactive() guide_coloursteps_interactive() respectively, already. length scale interactive parameter vector match length breaks. can also named vector, name correspond break name. can also defined function takes breaks input returns named unnamed vector values output. binned guides like bins coloursteps breaks include label breaks limits. number bins one less number breaks interactive parameters can constructed bin separately (look examples). colourbar guide raster mode, breaks vector, scalar 1 always, meaning interactive parameters scalar . colourbar guide non-raster mode, bar drawn using rectangles, breaks midpoints rectangle. interactive parameters , give interactivity key elements guide. provide interactivity rest elements guide, (title, labels, background, etc), relevant theme elements relevant guide arguments can used. guide arguments title.theme label.theme can defined element_text_interactive (fact, converted already), either directly via theme. See element_*_interactive section details.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_gradient_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive gradient colour scales — scale_gradient_interactive","title":"Create interactive gradient colour scales — scale_gradient_interactive","text":"scales based scale_colour_gradient(), scale_fill_gradient(), scale_colour_gradient2(), scale_fill_gradient2(), scale_colour_gradientn() scale_fill_gradientn(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_gradient_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive gradient colour scales — scale_gradient_interactive","text":"","code":"scale_colour_gradient_interactive(...)  scale_color_gradient_interactive(...)  scale_fill_gradient_interactive(...)  scale_colour_gradient2_interactive(...)  scale_color_gradient2_interactive(...)  scale_fill_gradient2_interactive(...)  scale_colour_gradientn_interactive(...)  scale_color_gradientn_interactive(...)  scale_fill_gradientn_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_gradient_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive gradient colour scales — scale_gradient_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_gradient_interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive gradient colour scales — scale_gradient_interactive","text":"interactive scale object.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_gradient_interactive.html","id":"details-for-interactive-scale-and-interactive-guide-functions","dir":"Reference","previous_headings":"","what":"Details for interactive scale and interactive guide functions","title":"Create interactive gradient colour scales — scale_gradient_interactive","text":"scales, interactive parameters can supplied arguments relevant function can scalar values vectors, depending number breaks (levels) type guide used. guides accept interactive parameter directly, receive scales. guide type legend, bins, colourbar coloursteps used, converted guide_legend_interactive(), guide_bins_interactive(), guide_colourbar_interactive() guide_coloursteps_interactive() respectively, already. length scale interactive parameter vector match length breaks. can also named vector, name correspond break name. can also defined function takes breaks input returns named unnamed vector values output. binned guides like bins coloursteps breaks include label breaks limits. number bins one less number breaks interactive parameters can constructed bin separately (look examples). colourbar guide raster mode, breaks vector, scalar 1 always, meaning interactive parameters scalar . colourbar guide non-raster mode, bar drawn using rectangles, breaks midpoints rectangle. interactive parameters , give interactivity key elements guide. provide interactivity rest elements guide, (title, labels, background, etc), relevant theme elements relevant guide arguments can used. guide arguments title.theme label.theme can defined element_text_interactive (fact, converted already), either directly via theme. See element_*_interactive section details.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_gradient_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive gradient colour scales — scale_gradient_interactive","text":"","code":"# add interactive gradient colour scale to a ggplot ------- library(ggplot2) library(ggiraph)  df <- expand.grid(x = 0:5, y = 0:5) df$z <- runif(nrow(df))  p <- ggplot(df, aes(x, y, fill = z, tooltip = \"tooltip\")) +   geom_raster_interactive()  # add an interactive scale (guide is colourbar) p1 <- p + scale_fill_gradient_interactive(   data_id = \"colourbar\",   onclick = \"alert(\\\"colourbar\\\")\",   tooltip = \"colourbar\" ) x <- girafe(ggobj = p1) if (interactive()) print(x)  # make the legend title interactive p2 <- p + scale_fill_gradient_interactive(   data_id = \"colourbar\",   onclick = \"alert(\\\"colourbar\\\")\",   tooltip = \"colourbar\",   name = label_interactive(     \"z\",     data_id = \"colourbar\",     onclick = \"alert(\\\"colourbar\\\")\",     tooltip = \"colourbar\"   ) ) x <- girafe(ggobj = p2) x <- girafe_options(   x,   opts_hover_key(girafe_css(\"stroke:red\", text = \"stroke:none;fill:red\")) ) if (interactive()) print(x)  # make the legend labels interactive p3 <- p + scale_fill_gradient_interactive(   data_id = \"colourbar\",   onclick = \"alert(\\\"colourbar\\\")\",   tooltip = \"colourbar\",   name = label_interactive(     \"z\",     data_id = \"colourbar\",     onclick = \"alert(\\\"colourbar\\\")\",     tooltip = \"colourbar\"   ),   labels = function(breaks) {     lapply(breaks, function(abreak) label_interactive(       as.character(abreak),       data_id = paste0(\"colourbar\", abreak),       onclick = \"alert(\\\"colourbar\\\")\",       tooltip = paste0(\"colourbar\", abreak)     ))   } ) x <- girafe(ggobj = p3) x <- girafe_options(   x,   opts_hover_key(girafe_css(\"stroke:red\", text = \"stroke:none;fill:red\")) ) if (interactive()) print(x)  # also via the guide p4 <- p + scale_fill_gradient_interactive(   data_id = \"colourbar\",   onclick = \"alert(\\\"colourbar\\\")\",   tooltip = \"colourbar\",   guide = guide_colourbar_interactive(     title.theme = element_text_interactive(       size = 8,       data_id = \"colourbar\",       onclick = \"alert(\\\"colourbar\\\")\",       tooltip = \"colourbar\"     ),     label.theme = element_text_interactive(       size = 8,       data_id = \"colourbar\",       onclick = \"alert(\\\"colourbar\\\")\",       tooltip = \"colourbar\"     )   ) ) x <- girafe(ggobj = p4) x <- girafe_options(   x,   opts_hover_key(girafe_css(\"stroke:red\", text = \"stroke:none;fill:red\")) ) if (interactive()) print(x)  # make the legend background interactive p5 <- p4 + theme(   legend.background = element_rect_interactive(     data_id = \"colourbar\",     onclick = \"alert(\\\"colourbar\\\")\",     tooltip = \"colourbar\"   ) ) x <- girafe(ggobj = p5) x <- girafe_options(   x,   opts_hover_key(girafe_css(\"stroke:red\", text = \"stroke:none;fill:red\")) ) if (interactive()) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_linetype_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive scales for line patterns — scale_linetype_interactive","title":"Create interactive scales for line patterns — scale_linetype_interactive","text":"scales based scale_linetype(), scale_linetype_continuous(), scale_linetype_discrete() scale_linetype_binned(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_linetype_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive scales for line patterns — scale_linetype_interactive","text":"","code":"scale_linetype_interactive(...)  scale_linetype_continuous_interactive(...)  scale_linetype_discrete_interactive(...)  scale_linetype_binned_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_linetype_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive scales for line patterns — scale_linetype_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_linetype_interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive scales for line patterns — scale_linetype_interactive","text":"interactive scale object.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_linetype_interactive.html","id":"details-for-interactive-scale-and-interactive-guide-functions","dir":"Reference","previous_headings":"","what":"Details for interactive scale and interactive guide functions","title":"Create interactive scales for line patterns — scale_linetype_interactive","text":"scales, interactive parameters can supplied arguments relevant function can scalar values vectors, depending number breaks (levels) type guide used. guides accept interactive parameter directly, receive scales. guide type legend, bins, colourbar coloursteps used, converted guide_legend_interactive(), guide_bins_interactive(), guide_colourbar_interactive() guide_coloursteps_interactive() respectively, already. length scale interactive parameter vector match length breaks. can also named vector, name correspond break name. can also defined function takes breaks input returns named unnamed vector values output. binned guides like bins coloursteps breaks include label breaks limits. number bins one less number breaks interactive parameters can constructed bin separately (look examples). colourbar guide raster mode, breaks vector, scalar 1 always, meaning interactive parameters scalar . colourbar guide non-raster mode, bar drawn using rectangles, breaks midpoints rectangle. interactive parameters , give interactivity key elements guide. provide interactivity rest elements guide, (title, labels, background, etc), relevant theme elements relevant guide arguments can used. guide arguments title.theme label.theme can defined element_text_interactive (fact, converted already), either directly via theme. See element_*_interactive section details.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_manual_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create your own interactive discrete scale — scale_manual_interactive","title":"Create your own interactive discrete scale — scale_manual_interactive","text":"scales based scale_colour_manual(), scale_fill_manual(), scale_size_manual(), scale_shape_manual(), scale_linetype_manual(), scale_alpha_manual() scale_discrete_manual(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_manual_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create your own interactive discrete scale — scale_manual_interactive","text":"","code":"scale_colour_manual_interactive(...)  scale_color_manual_interactive(...)  scale_fill_manual_interactive(...)  scale_size_manual_interactive(...)  scale_shape_manual_interactive(...)  scale_linetype_manual_interactive(...)  scale_alpha_manual_interactive(...)  scale_discrete_manual_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_manual_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create your own interactive discrete scale — scale_manual_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_manual_interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create your own interactive discrete scale — scale_manual_interactive","text":"interactive scale object.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_manual_interactive.html","id":"details-for-interactive-scale-and-interactive-guide-functions","dir":"Reference","previous_headings":"","what":"Details for interactive scale and interactive guide functions","title":"Create your own interactive discrete scale — scale_manual_interactive","text":"scales, interactive parameters can supplied arguments relevant function can scalar values vectors, depending number breaks (levels) type guide used. guides accept interactive parameter directly, receive scales. guide type legend, bins, colourbar coloursteps used, converted guide_legend_interactive(), guide_bins_interactive(), guide_colourbar_interactive() guide_coloursteps_interactive() respectively, already. length scale interactive parameter vector match length breaks. can also named vector, name correspond break name. can also defined function takes breaks input returns named unnamed vector values output. binned guides like bins coloursteps breaks include label breaks limits. number bins one less number breaks interactive parameters can constructed bin separately (look examples). colourbar guide raster mode, breaks vector, scalar 1 always, meaning interactive parameters scalar . colourbar guide non-raster mode, bar drawn using rectangles, breaks midpoints rectangle. interactive parameters , give interactivity key elements guide. provide interactivity rest elements guide, (title, labels, background, etc), relevant theme elements relevant guide arguments can used. guide arguments title.theme label.theme can defined element_text_interactive (fact, converted already), either directly via theme. See element_*_interactive section details.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_manual_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create your own interactive discrete scale — scale_manual_interactive","text":"","code":"# add interactive manual fill scale to a ggplot ------- library(ggplot2) library(ggiraph)  dat <- data.frame(   name = c( \"Guy\", \"Ginette\", \"David\", \"Cedric\", \"Frederic\" ),   gender = c( \"Male\", \"Female\", \"Male\", \"Male\", \"Male\" ),   height = c(169, 160, 171, 172, 171 ) ) p <- ggplot(dat, aes( x = name, y = height, fill = gender,                       data_id = name ) ) +   geom_bar_interactive(stat = \"identity\")  # add interactive scale (guide is legend) p1 <- p +   scale_fill_manual_interactive(     values = c(Male = \"#0072B2\", Female = \"#009E73\"),     data_id = c(Female = \"Female\", Male = \"Male\"),     tooltip = c(Male = \"Male\", Female = \"Female\")   ) x <- girafe(ggobj = p1) if (interactive()) print(x)  # make the title interactive too p2 <- p +   scale_fill_manual_interactive(     name = label_interactive(\"gender\", tooltip=\"Gender levels\", data_id=\"legend.title\"),     values = c(Male = \"#0072B2\", Female = \"#009E73\"),     data_id = c(Female = \"Female\", Male = \"Male\"),     tooltip = c(Male = \"Male\", Female = \"Female\")   ) x <- girafe(ggobj = p2) x <- girafe_options(x,                     opts_hover_key(girafe_css(\"stroke:red\", text=\"stroke:none;fill:red\"))) if (interactive()) print(x)  # the interactive params can be functions too p3 <- p +   scale_fill_manual_interactive(     name = label_interactive(\"gender\", tooltip=\"Gender levels\", data_id=\"legend.title\"),     values = c(Male = \"#0072B2\", Female = \"#009E73\"),     data_id = function(breaks) { as.character(breaks)},     tooltip = function(breaks) { as.character(breaks)},     onclick = function(breaks) { paste0(\"alert(\\\"\", as.character(breaks), \"\\\")\") }   ) x <- girafe(ggobj = p3) x <- girafe_options(x,                     opts_hover_key(girafe_css(\"stroke:red\", text=\"stroke:none;fill:red\"))) if (interactive()) print(x)  # also via the guide p4 <- p + scale_fill_manual_interactive(   values = c(Male = \"#0072B2\", Female = \"#009E73\"),   data_id = function(breaks) { as.character(breaks)},   tooltip = function(breaks) { as.character(breaks)},   onclick = function(breaks) { paste0(\"alert(\\\"\", as.character(breaks), \"\\\")\") },   guide = guide_legend_interactive(     title.theme = element_text_interactive(       size = 8,       data_id = \"legend.title\",       onclick = \"alert(\\\"Gender levels\\\")\",       tooltip = \"Gender levels\"     ),     label.theme = element_text_interactive(       size = 8     )   ) ) x <- girafe(ggobj = p4) x <- girafe_options(x,                     opts_hover_key(girafe_css(\"stroke:red\", text=\"stroke:none;fill:red\"))) if (interactive()) print(x)  # make the legend labels interactive p5 <- p +   scale_fill_manual_interactive(     name = label_interactive(\"gender\", tooltip=\"Gender levels\", data_id=\"legend.title\"),     values = c(Male = \"#0072B2\", Female = \"#009E73\"),     data_id = function(breaks) { as.character(breaks)},     tooltip = function(breaks) { as.character(breaks)},     onclick = function(breaks) { paste0(\"alert(\\\"\", as.character(breaks), \"\\\")\") },     labels = function(breaks) {       lapply(breaks, function(br) {         label_interactive(           as.character(br),           data_id = as.character(br),           onclick = paste0(\"alert(\\\"\", as.character(br), \"\\\")\"),           tooltip = as.character(br)         )       })     }   ) x <- girafe(ggobj = p5) x <- girafe_options(x,                     opts_hover_key(girafe_css(\"stroke:red\", text=\"stroke:none;fill:red\"))) if (interactive()) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_shape_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive scales for shapes — scale_shape_interactive","title":"Create interactive scales for shapes — scale_shape_interactive","text":"scales based scale_shape(), scale_shape_continuous(), scale_shape_discrete(), scale_shape_binned() scale_shape_ordinal(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_shape_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive scales for shapes — scale_shape_interactive","text":"","code":"scale_shape_interactive(...)  scale_shape_continuous_interactive(...)  scale_shape_discrete_interactive(...)  scale_shape_binned_interactive(...)  scale_shape_ordinal_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_shape_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive scales for shapes — scale_shape_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_shape_interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive scales for shapes — scale_shape_interactive","text":"interactive scale object.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_shape_interactive.html","id":"details-for-interactive-scale-and-interactive-guide-functions","dir":"Reference","previous_headings":"","what":"Details for interactive scale and interactive guide functions","title":"Create interactive scales for shapes — scale_shape_interactive","text":"scales, interactive parameters can supplied arguments relevant function can scalar values vectors, depending number breaks (levels) type guide used. guides accept interactive parameter directly, receive scales. guide type legend, bins, colourbar coloursteps used, converted guide_legend_interactive(), guide_bins_interactive(), guide_colourbar_interactive() guide_coloursteps_interactive() respectively, already. length scale interactive parameter vector match length breaks. can also named vector, name correspond break name. can also defined function takes breaks input returns named unnamed vector values output. binned guides like bins coloursteps breaks include label breaks limits. number bins one less number breaks interactive parameters can constructed bin separately (look examples). colourbar guide raster mode, breaks vector, scalar 1 always, meaning interactive parameters scalar . colourbar guide non-raster mode, bar drawn using rectangles, breaks midpoints rectangle. interactive parameters , give interactivity key elements guide. provide interactivity rest elements guide, (title, labels, background, etc), relevant theme elements relevant guide arguments can used. guide arguments title.theme label.theme can defined element_text_interactive (fact, converted already), either directly via theme. See element_*_interactive section details.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_size_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive scales for area or radius — scale_size_interactive","title":"Create interactive scales for area or radius — scale_size_interactive","text":"scales based scale_size(), scale_size_area(), scale_size_continuous(), scale_size_discrete(), scale_size_binned(), scale_size_binned_area(), scale_size_date(), scale_size_datetime(), scale_size_ordinal() scale_radius(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_size_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive scales for area or radius — scale_size_interactive","text":"","code":"scale_size_interactive(...)  scale_size_area_interactive(...)  scale_size_continuous_interactive(...)  scale_size_discrete_interactive(...)  scale_size_binned_interactive(...)  scale_size_binned_area_interactive(...)  scale_size_date_interactive(...)  scale_size_datetime_interactive(...)  scale_size_ordinal_interactive(...)  scale_radius_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_size_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive scales for area or radius — scale_size_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_size_interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive scales for area or radius — scale_size_interactive","text":"interactive scale object.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_size_interactive.html","id":"details-for-interactive-scale-and-interactive-guide-functions","dir":"Reference","previous_headings":"","what":"Details for interactive scale and interactive guide functions","title":"Create interactive scales for area or radius — scale_size_interactive","text":"scales, interactive parameters can supplied arguments relevant function can scalar values vectors, depending number breaks (levels) type guide used. guides accept interactive parameter directly, receive scales. guide type legend, bins, colourbar coloursteps used, converted guide_legend_interactive(), guide_bins_interactive(), guide_colourbar_interactive() guide_coloursteps_interactive() respectively, already. length scale interactive parameter vector match length breaks. can also named vector, name correspond break name. can also defined function takes breaks input returns named unnamed vector values output. binned guides like bins coloursteps breaks include label breaks limits. number bins one less number breaks interactive parameters can constructed bin separately (look examples). colourbar guide raster mode, breaks vector, scalar 1 always, meaning interactive parameters scalar . colourbar guide non-raster mode, bar drawn using rectangles, breaks midpoints rectangle. interactive parameters , give interactivity key elements guide. provide interactivity rest elements guide, (title, labels, background, etc), relevant theme elements relevant guide arguments can used. guide arguments title.theme label.theme can defined element_text_interactive (fact, converted already), either directly via theme. See element_*_interactive section details.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_viridis_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive viridis colour scales — scale_viridis_interactive","title":"Create interactive viridis colour scales — scale_viridis_interactive","text":"scales based scale_colour_viridis_d(), scale_fill_viridis_d(), scale_colour_viridis_c(), scale_fill_viridis_c(), scale_colour_viridis_b(), scale_fill_viridis_b(), scale_colour_ordinal(), scale_fill_ordinal(). See documentation functions details.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_viridis_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive viridis colour scales — scale_viridis_interactive","text":"","code":"scale_colour_viridis_d_interactive(...)  scale_color_viridis_d_interactive(...)  scale_fill_viridis_d_interactive(...)  scale_colour_viridis_c_interactive(...)  scale_color_viridis_c_interactive(...)  scale_fill_viridis_c_interactive(...)  scale_colour_viridis_b_interactive(...)  scale_color_viridis_b_interactive(...)  scale_fill_viridis_b_interactive(...)  scale_colour_ordinal_interactive(...)  scale_color_ordinal_interactive(...)  scale_fill_ordinal_interactive(...)"},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_viridis_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive viridis colour scales — scale_viridis_interactive","text":"... arguments passed base function, plus interactive_parameters.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_viridis_interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive viridis colour scales — scale_viridis_interactive","text":"interactive scale object.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_viridis_interactive.html","id":"details-for-interactive-scale-and-interactive-guide-functions","dir":"Reference","previous_headings":"","what":"Details for interactive scale and interactive guide functions","title":"Create interactive viridis colour scales — scale_viridis_interactive","text":"scales, interactive parameters can supplied arguments relevant function can scalar values vectors, depending number breaks (levels) type guide used. guides accept interactive parameter directly, receive scales. guide type legend, bins, colourbar coloursteps used, converted guide_legend_interactive(), guide_bins_interactive(), guide_colourbar_interactive() guide_coloursteps_interactive() respectively, already. length scale interactive parameter vector match length breaks. can also named vector, name correspond break name. can also defined function takes breaks input returns named unnamed vector values output. binned guides like bins coloursteps breaks include label breaks limits. number bins one less number breaks interactive parameters can constructed bin separately (look examples). colourbar guide raster mode, breaks vector, scalar 1 always, meaning interactive parameters scalar . colourbar guide non-raster mode, bar drawn using rectangles, breaks midpoints rectangle. interactive parameters , give interactivity key elements guide. provide interactivity rest elements guide, (title, labels, background, etc), relevant theme elements relevant guide arguments can used. guide arguments title.theme label.theme can defined element_text_interactive (fact, converted already), either directly via theme. See element_*_interactive section details.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/scale_viridis_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive viridis colour scales — scale_viridis_interactive","text":"","code":"# add interactive viridis scale to a ggplot ------- library(ggplot2) library(ggiraph)  set.seed(4393) dsmall <- diamonds[sample(nrow(diamonds), 1000),] p <- ggplot(dsmall, aes(x, y)) +   stat_density_2d(aes(     fill = after_stat(nlevel),     tooltip = paste(\"nlevel:\", after_stat(nlevel))   ),   geom = \"interactive_polygon\") +   facet_grid(. ~ cut)  # add interactive scale, by default the guide is a colourbar p1 <- p + scale_fill_viridis_c_interactive(data_id = \"nlevel\",                                            tooltip = \"nlevel\") x <- girafe(ggobj = p1) if (interactive()) print(x)  # make it legend p2 <- p + scale_fill_viridis_c_interactive(data_id = \"nlevel\",                                            tooltip = \"nlevel\",                                            guide = \"legend\") x <- girafe(ggobj = p2) if (interactive()) print(x)  # set the keys separately p3 <- p + scale_fill_viridis_c_interactive(   data_id = function(breaks) {     as.character(breaks)   },   tooltip = function(breaks) {     as.character(breaks)   },   guide = \"legend\" ) x <- girafe(ggobj = p3) if (interactive()) print(x)   # make the title and labels interactive p4 <- p + scale_fill_viridis_c_interactive(   data_id = function(breaks) {     as.character(breaks)   },   tooltip = function(breaks) {     as.character(breaks)   },   guide = \"legend\",   name = label_interactive(\"nlevel\", data_id = \"nlevel\",                            tooltip = \"nlevel\"),   labels = function(breaks) {     label_interactive(       as.character(breaks),       data_id = as.character(breaks),       onclick = paste0(\"alert(\\\"\", as.character(breaks), \"\\\")\"),       tooltip = as.character(breaks)     )   } ) x <- girafe(ggobj = p4) x <- girafe_options(x,                     opts_hover_key(girafe_css(\"stroke:red\", text=\"stroke:none;fill:red\"))) if (interactive()) print(x)"},{"path":"https://davidgohel.github.io/ggiraph/reference/set_girafe_defaults.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify defaults girafe animation options — set_girafe_defaults","title":"Modify defaults girafe animation options — set_girafe_defaults","text":"girafe animation options (see girafe_defaults()) automatically applied every girafe produce. Use set_girafe_defaults() override . Use init_girafe_defaults() re-init values package defaults.","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/set_girafe_defaults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify defaults girafe animation options — set_girafe_defaults","text":"","code":"set_girafe_defaults(   fonts = NULL,   opts_sizing = NULL,   opts_tooltip = NULL,   opts_hover = NULL,   opts_hover_key = NULL,   opts_hover_inv = NULL,   opts_hover_theme = NULL,   opts_selection = NULL,   opts_selection_inv = NULL,   opts_selection_key = NULL,   opts_selection_theme = NULL,   opts_zoom = NULL,   opts_toolbar = NULL )"},{"path":"https://davidgohel.github.io/ggiraph/reference/set_girafe_defaults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify defaults girafe animation options — set_girafe_defaults","text":"fonts default values fonts, see argument fonts dsvg() function. opts_sizing default values opts_sizing() used argument options girafe() function. opts_tooltip default values opts_tooltip() used argument options girafe() function. opts_hover default values opts_hover() used argument options girafe() function. opts_hover_key default values opts_hover_key() used argument options girafe() function. opts_hover_inv default values opts_hover_inv() used argument options girafe() function. opts_hover_theme default values opts_hover_theme() used argument options girafe() function. opts_selection default values opts_selection() used argument options girafe() function. opts_selection_inv default values opts_selection_inv() used argument options girafe() function. opts_selection_key default values opts_selection_key() used argument options girafe() function. opts_selection_theme default values opts_selection_theme() used argument options girafe() function. opts_zoom default values opts_zoom() used argument options girafe() function. opts_toolbar default values opts_toolbar() used argument options girafe() function.","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/set_girafe_defaults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify defaults girafe animation options — set_girafe_defaults","text":"","code":"library(ggplot2)  set_girafe_defaults(   opts_hover = opts_hover(css = \"r:10px;\"),   opts_hover_inv = opts_hover_inv(),   opts_sizing = opts_sizing(rescale = FALSE, width = .8),   opts_tooltip = opts_tooltip(opacity = .7,                               offx = 20, offy = -10,                               use_fill = TRUE, use_stroke = TRUE,                               delay_mouseout = 1000),   opts_toolbar = opts_toolbar(position = \"top\", saveaspng = FALSE),   opts_zoom = opts_zoom(min = .8, max = 7) )  init_girafe_defaults()"},{"path":"https://davidgohel.github.io/ggiraph/reference/validated_fonts.html","id":null,"dir":"Reference","previous_headings":"","what":"List of validated default fonts — validated_fonts","title":"List of validated default fonts — validated_fonts","text":"Validates possibly modifies fonts used default value graphic according fonts available machine. process elements named \"sans\", \"serif\", \"mono\" \"symbol\".","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/validated_fonts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of validated default fonts — validated_fonts","text":"","code":"validated_fonts(fonts = list())"},{"path":"https://davidgohel.github.io/ggiraph/reference/validated_fonts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of validated default fonts — validated_fonts","text":"fonts Named list font names aliased fonts installed system. unspecified, R default families \"sans\", \"serif\", \"mono\" \"symbol\" aliased family returned match_family(). fonts available, default mapping use values:","code":""},{"path":"https://davidgohel.github.io/ggiraph/reference/validated_fonts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of validated default fonts — validated_fonts","text":"named list validated font family names","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/reference/validated_fonts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of validated default fonts — validated_fonts","text":"","code":"validated_fonts() #> $sans #> [1] \"DejaVu Sans\" #>  #> $serif #> [1] \"DejaVu serif\" #>  #> $mono #> [1] \"DejaVu Sans\" #>  #> $symbol #> [1] \"DejaVu Sans\" #>"},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"changes-0-8-10","dir":"Changelog","previous_headings":"","what":"Changes","title":"ggiraph 0.8.10","text":"girafeOutput() argument height now defaults NULL. Set height “500px” recover previous disposition.","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"issues-0-8-10","dir":"Changelog","previous_headings":"","what":"Issues","title":"ggiraph 0.8.10","text":"fixed size now defined within style inches, size now expected.","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"feature-0-8-10","dir":"Changelog","previous_headings":"","what":"Feature","title":"ggiraph 0.8.10","text":"support trailing commas everywhere girafe toolbar can now fixed instead floating. feature can defined opts_toolbar(fixed = TRUE).","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-089","dir":"Changelog","previous_headings":"","what":"ggiraph 0.8.9","title":"ggiraph 0.8.9","text":"CRAN release: 2024-02-24","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"changes-0-8-9","dir":"Changelog","previous_headings":"","what":"Changes","title":"ggiraph 0.8.9","text":"adapt guides ggplot ‘3.5.0’ deprecate ggiraph font check now done theme settings (argument ggobj used)","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"issues-0-8-9","dir":"Changelog","previous_headings":"","what":"Issues","title":"ggiraph 0.8.9","text":"bg set ‘transparent’, ’s transformed almost transparent ‘#ffffff01’. Enable screen-readers read  items - set svg role ‘graphics-document’","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-088","dir":"Changelog","previous_headings":"","what":"ggiraph 0.8.8","title":"ggiraph 0.8.8","text":"CRAN release: 2023-12-09","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"issues-0-8-8","dir":"Changelog","previous_headings":"","what":"Issues","title":"ggiraph 0.8.8","text":"Fix issue interactive points shapes lines used (#252). correct Rf_error(\"... (%S)\", note); Rf_error(\"... (%s)\", note);","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-087","dir":"Changelog","previous_headings":"","what":"ggiraph 0.8.7","title":"ggiraph 0.8.7","text":"CRAN release: 2023-03-17","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"changes-0-8-7","dir":"Changelog","previous_headings":"","what":"Changes","title":"ggiraph 0.8.7","text":"deprecation ggiraph(), ggiraphOutput() renderggiraph().","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"issues-0-8-7","dir":"Changelog","previous_headings":"","what":"Issues","title":"ggiraph 0.8.7","text":"grid makeContext CRAN check drop cpp11 requirement","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-086","dir":"Changelog","previous_headings":"","what":"ggiraph 0.8.6","title":"ggiraph 0.8.6","text":"CRAN release: 2023-01-22","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"features-0-8-6","dir":"Changelog","previous_headings":"","what":"features","title":"ggiraph 0.8.6","text":"Function girafe() gains new argument dependencies pass additional widget HTML dependencies htmlwidgets::createWidget().","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"issues-0-8-6","dir":"Changelog","previous_headings":"","what":"Issues","title":"ggiraph 0.8.6","text":"Fix missing inclusion  src/raster.cpp.","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-085","dir":"Changelog","previous_headings":"","what":"ggiraph 0.8.5","title":"ggiraph 0.8.5","text":"CRAN release: 2022-12-03","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"issues-0-8-5","dir":"Changelog","previous_headings":"","what":"Issues","title":"ggiraph 0.8.5","text":"Make girafe_options() robust changes htmlwidgets::sizingPolicy()","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-084","dir":"Changelog","previous_headings":"","what":"ggiraph 0.8.4","title":"ggiraph 0.8.4","text":"CRAN release: 2022-11-15","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"enhancement-0-8-4","dir":"Changelog","previous_headings":"","what":"Enhancement","title":"ggiraph 0.8.4","text":"Added tooltips argument opts_toolbar internationalization purposes Added hidden argument opts_toolbar hiding buttons/button groups Added zoom rectangle feature zoom related improvements New feature: hover nearest element mouse movement Improved javascript performance (mouse event handling) Added interactive parameters outlier points geom_boxplot_interactive Added accessibility elements SVG output (title, desc, role) Added opts_selection_inv inverted selection effect Added set_girafe_defaults(), girafe_defaults() init_girafe_defaults() set default girafe options automatically. Also R Markdown, svg default width height set knitr chunk options fig.width fig.height.","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"issues-0-8-4","dir":"Changelog","previous_headings":"","what":"Issues","title":"ggiraph 0.8.4","text":"fix: issue incorrect font used png export fix: issue broken interactivity discrete guides fix: issue geom_segment_interactive polar coords fix: set fill/stroke color svg elements even opacity zero. fix: hover styles take priority selection styles. doc: updated documentation links test: updated tests check required packages test: updated github actions","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"changes-0-8-4","dir":"Changelog","previous_headings":"","what":"Changes","title":"ggiraph 0.8.4","text":"Update internals ‘ggplot2’ version 3.4.0. Now facet_wrap_interactive() facet_grid_interactive() need used let facets interactives (see also labeller_interactive()).","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-083","dir":"Changelog","previous_headings":"","what":"ggiraph 0.8.3","title":"ggiraph 0.8.3","text":"CRAN release: 2022-08-19","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"issues-0-8-3","dir":"Changelog","previous_headings":"","what":"Issues","title":"ggiraph 0.8.3","text":"fix: update Rd content produce valid HTML5 (CRAN manuals now using HTML5 format).","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-082","dir":"Changelog","previous_headings":"","what":"ggiraph 0.8.2","title":"ggiraph 0.8.2","text":"CRAN release: 2022-02-22","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"issues-0-8-2","dir":"Changelog","previous_headings":"","what":"Issues","title":"ggiraph 0.8.2","text":"fix linetype line size less 1 (#216). fix length-1 issue inst/tinytest/test-fonts.R","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-081","dir":"Changelog","previous_headings":"","what":"ggiraph 0.8.1","title":"ggiraph 0.8.1","text":"CRAN release: 2021-12-15","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"issues-0-8-1","dir":"Changelog","previous_headings":"","what":"Issues","title":"ggiraph 0.8.1","text":"skip test test-zz-dom.R ‘PhantomJS’ installed skip tests test-interactive_text_grob.R test-fonts.R font detected system.","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-080","dir":"Changelog","previous_headings":"","what":"ggiraph 0.8.0","title":"ggiraph 0.8.0","text":"CRAN release: 2021-12-08","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"enhancement-0-8-0","dir":"Changelog","previous_headings":"","what":"Enhancement","title":"ggiraph 0.8.0","text":"Updated DSVG device version 14 Added support clipping paths, masks, gradients patterns Implemented new version internal DSVG device Refactored cpp code, smaller files per context Added tests tinytest & improved coverage New geom functions: geom_violin_interactive, geom_label_repel_interactive, geom_text_repel_interactive, geom_contour_filled_interactive, geom_hex_interactive, geom_spoke_interactive, geom_curve_interactive, geom_count_interactive, geom_bin_2d_interactive, geom_density_2d_filled_interactive. New grob functions: interactive_curve_grob. New scale functions: scale_alpha_binned_interactive. Added outputArgs argument renderGirafe, controlling svg dimensions rmarkdown Demote warning error case setting svg attributes mismatched id’s. Added support custom interactive parameters via extra_interactive_params argument Miscellaneous refactorings & improvements internal code","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"changes-0-8-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"ggiraph 0.8.0","text":"Updated tinyxml2 version 9.0.0 Switched tinytest testing Updated dependency ggplot2 version 3.3.5. Updated libs Windows build (thanks Jeroen Ooms)","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"issues-0-8-0","dir":"Changelog","previous_headings":"","what":"Issues","title":"ggiraph 0.8.0","text":"Fixed interactive_text_grob check.overlap = TRUE Fixed interactive_points_grob interactive attributes shapes lines used Fixed issues geom_errorbar_interactive Fixed typos documentation Handle NA’s GeomInteractiveTile","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-0710","dir":"Changelog","previous_headings":"","what":"ggiraph 0.7.10","title":"ggiraph 0.7.10","text":"CRAN release: 2021-05-19","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"enhancement-0-7-10","dir":"Changelog","previous_headings":"","what":"Enhancement","title":"ggiraph 0.7.10","text":"Make sure parameters panel_draw|group ggplot2 Updated labeller_interactive usage intuitive Updated geoms utils latest ggplot2","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"issues-0-7-10","dir":"Changelog","previous_headings":"","what":"Issues","title":"ggiraph 0.7.10","text":"drop configure script mimic svglite way integrating libpng","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-079","dir":"Changelog","previous_headings":"","what":"ggiraph 0.7.9","title":"ggiraph 0.7.9","text":"CRAN release: 2021-05-12","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"enhancement-0-7-9","dir":"Changelog","previous_headings":"","what":"Enhancement","title":"ggiraph 0.7.9","text":"New function geom_dotplot_interactive. New function labeller_interactive make strip labels interactive.","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"changes-0-7-9","dir":"Changelog","previous_headings":"","what":"Changes","title":"ggiraph 0.7.9","text":"Improved tooltip positioning added ‘placement’ parameter Added ‘tooltip_fill’ interactive attribute move font management gdtools systemfonts, also libpng now required gdtools/cairo used anymore. comes also functions validated_fonts() also match_family() font_family_exists() copied package gdtools. Updated geometries latest ggplot2","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"issues-0-7-9","dir":"Changelog","previous_headings":"","what":"Issues","title":"ggiraph 0.7.9","text":"Fixed issue tooltip fill color geom_label_interactive Fixed tooltip issues (scaling markup decoding) xaringan Fixed issue tooltip css missing zindex pointer-events","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-078","dir":"Changelog","previous_headings":"","what":"ggiraph 0.7.8","title":"ggiraph 0.7.8","text":"CRAN release: 2020-07-01","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"changes-0-7-8","dir":"Changelog","previous_headings":"","what":"Changes","title":"ggiraph 0.7.8","text":"update changes R graphics engine (thanks Dr Paul Murrell)","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"issues-0-7-8","dir":"Changelog","previous_headings":"","what":"Issues","title":"ggiraph 0.7.8","text":"set max size shiny shinyOutput size","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"enhancement-0-7-7","dir":"Changelog","previous_headings":"","what":"Enhancement","title":"ggiraph 0.7.7","text":"Updated geoms ggplot2 v3.3.0 Added new scales guides ggplot2 v3.3.0","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"enhancement-0-7-5","dir":"Changelog","previous_headings":"","what":"Enhancement","title":"ggiraph 0.7.5","text":"Using tinyxml2 creating svg doc","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"enhancement-0-7-1","dir":"Changelog","previous_headings":"","what":"Enhancement","title":"ggiraph 0.7.1","text":"Refactoring ggiraphjs, separate modules action context Added shiny messaging hovered elements Added opts_hover_inv inverted hover effect Added parameter exported png filename set png quality 1","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"bug-fixes-0-7-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"ggiraph 0.7.1","text":"misc fixes interactive geom internals","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"documentation-0-7-1","dir":"Changelog","previous_headings":"","what":"Documentation","title":"ggiraph 0.7.1","text":"Added complete shiny example (gender) selection/hover options/tricks","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-070","dir":"Changelog","previous_headings":"","what":"ggiraph 0.7.0","title":"ggiraph 0.7.0","text":"CRAN release: 2019-10-31","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"enhancement-0-7-0","dir":"Changelog","previous_headings":"","what":"Enhancement","title":"ggiraph 0.7.0","text":"refactoring internals new function girafe_css() define individual css properties per type elements ability add interactivity panel usual also theme scales now Upgrade geoms ggplot2 v3.2.0 (thanks huge work kindly made Panagiotis Skintzos)","code":""},{"path":[]},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"enhancement-0-6-2","dir":"Changelog","previous_headings":"","what":"Enhancement","title":"ggiraph 0.6.2","text":"tooltip always displayed inside SVG area (small devices) Upgrade geoms ggplot2 v3.2.0 (thanks huge work kindly made Panagiotis Skintzos)","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"bug-fixes-0-6-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"ggiraph 0.6.2","text":"Handle html entities tooltip fix differences rendering ggplot2 pure graphs girafe output (#125)","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-061","dir":"Changelog","previous_headings":"","what":"ggiraph 0.6.1","title":"ggiraph 0.6.1","text":"CRAN release: 2019-04-09","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"enhancement-0-6-1","dir":"Changelog","previous_headings":"","what":"Enhancement","title":"ggiraph 0.6.1","text":"new annotate_interactive function.","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"changes-0-6-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"ggiraph 0.6.1","text":"improving sizing shiny.","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-060","dir":"Changelog","previous_headings":"","what":"ggiraph 0.6.0","title":"ggiraph 0.6.0","text":"CRAN release: 2018-11-01","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"changes-0-6-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"ggiraph 0.6.0","text":"package importing rvg now need compiler install package source. dsvg function removed rvg.","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-050","dir":"Changelog","previous_headings":"","what":"ggiraph 0.5.0","title":"ggiraph 0.5.0","text":"CRAN release: 2018-09-27","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"changes-0-5-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"ggiraph 0.5.0","text":"package offers now new functions girafe() girafe_options() used instead function ggiraph(). convenient use customization needed.","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"enhancement-0-5-0","dir":"Changelog","previous_headings":"","what":"Enhancement","title":"ggiraph 0.5.0","text":"add ‘download png’ button usage d3 version 5.7.0","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"bug-fixes-0-5-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"ggiraph 0.5.0","text":"responsive behaviour rendered IE <= 12 now fixed","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-044","dir":"Changelog","previous_headings":"","what":"ggiraph 0.4.4","title":"ggiraph 0.4.4","text":"CRAN release: 2018-07-15","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"enhancement-0-4-4","dir":"Changelog","previous_headings":"","what":"Enhancement","title":"ggiraph 0.4.4","text":"new functions geom_sf_interactive","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-043","dir":"Changelog","previous_headings":"","what":"ggiraph 0.4.3","title":"ggiraph 0.4.3","text":"CRAN release: 2018-06-10","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"enhancement-0-4-3","dir":"Changelog","previous_headings":"","what":"Enhancement","title":"ggiraph 0.4.3","text":"new functions geom_hline_interactive geom_vline_interactive implemented Eric Book. element data_id highlighted mouse one elements. ggproto GeomInteractive exported.","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-042","dir":"Changelog","previous_headings":"","what":"ggiraph 0.4.2","title":"ggiraph 0.4.2","text":"CRAN release: 2017-12-19","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"changes-0-4-2","dir":"Changelog","previous_headings":"","what":"Changes","title":"ggiraph 0.4.2","text":"ggiraph new argument dep_dir controls location output files. deprecation argument use_widget_size flexdashboard. hope last mention theses NEWS file.","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-041","dir":"Changelog","previous_headings":"","what":"ggiraph 0.4.1","title":"ggiraph 0.4.1","text":"CRAN release: 2017-09-05","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"changes-0-4-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"ggiraph 0.4.1","text":"argument flexdashboard width deprecated… ggiraph gains new argument use_widget_size force usage htmlwidget size block responsive behavior.","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-040","dir":"Changelog","previous_headings":"","what":"ggiraph 0.4.0","title":"ggiraph 0.4.0","text":"CRAN release: 2017-06-24","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"enhancement-0-4-0","dir":"Changelog","previous_headings":"","what":"Enhancement","title":"ggiraph 0.4.0","text":"lasso selection implemented Shiny context toolbar zooming selecting elements implemented.","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"ggiraph 0.4.0","text":"zoom disabled default can activated via button toolbar. prevents scrooling issue (mouse zoomable svg steals scroll ability within document). ggiraph arguments flexdashboard width now deprecated effects","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-033","dir":"Changelog","previous_headings":"","what":"ggiraph 0.3.3","title":"ggiraph 0.3.3","text":"CRAN release: 2017-03-24","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"enhancement-0-3-3","dir":"Changelog","previous_headings":"","what":"Enhancement","title":"ggiraph 0.3.3","text":"widget sizing improved ggiraph function gains new argument flexdashboard make sure graph fits available room.","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"bug-fixes-0-3-3","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"ggiraph 0.3.3","text":"warnings occur default_aes ggproto missing slow zoom pan effect now solved","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-032","dir":"Changelog","previous_headings":"","what":"ggiraph 0.3.2","title":"ggiraph 0.3.2","text":"CRAN release: 2016-11-04","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"new-features-0-3-2","dir":"Changelog","previous_headings":"","what":"New features","title":"ggiraph 0.3.2","text":"new geometry: geom_tile_interactive","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"bug-fixes-0-3-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"ggiraph 0.3.2","text":"fix element selection: svg elements id selected element clicked fix css issues occured several ggiraph page tooltip share css attributes.","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"enhancement-0-3-2","dir":"Changelog","previous_headings":"","what":"Enhancement","title":"ggiraph 0.3.2","text":"link online documentation. usage d3.js V4","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-031","dir":"Changelog","previous_headings":"","what":"ggiraph 0.3.1","title":"ggiraph 0.3.1","text":"CRAN release: 2016-07-01","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"new-features-0-3-1","dir":"Changelog","previous_headings":"","what":"New features","title":"ggiraph 0.3.1","text":"size management improved 3 new geometries: geom_boxplot_interactive, geom_line_interactive geom_bar_interactive.","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"bug-fixes-0-3-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"ggiraph 0.3.1","text":"addCustomMessageHandler called avoid javascript exception fix display issue RStudio viewer Windows","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-030","dir":"Changelog","previous_headings":"","what":"ggiraph 0.3.0","title":"ggiraph 0.3.0","text":"CRAN release: 2016-05-04","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"enhancement-0-3-0","dir":"Changelog","previous_headings":"","what":"Enhancement","title":"ggiraph 0.3.0","text":"Allow zooming & panning turned clicked elements can now tracked shiny","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"ggiraph-020","dir":"Changelog","previous_headings":"","what":"ggiraph 0.2.0","title":"ggiraph 0.2.0","text":"CRAN release: 2016-03-03","code":""},{"path":"https://davidgohel.github.io/ggiraph/news/index.html","id":"enhancement-0-2-0","dir":"Changelog","previous_headings":"","what":"Enhancement","title":"ggiraph 0.2.0","text":"Migration d3.js Update htmlwidgets 0.6","code":""}]
